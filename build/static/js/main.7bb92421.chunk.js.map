{"version":3,"sources":["routes.tsx","service/localStorageService.tsx","components/PageTemplate.tsx","pages/Dashboard/index.tsx","pages/About/index.tsx","pages/Contact/index.tsx","pages/Home/index.tsx","pages/NotFound/index.tsx","App.tsx","components/DialogProvider.tsx","reportWebVitals.ts","components/CreateSnackbarProvider.tsx","index.tsx"],"names":["RouteId","localStorageService","drawerOpened","set","flag","localStorage","setItem","JSON","stringify","unset","removeItem","get","parse","getItem","drawerWidth","useStyles","makeStyles","theme","root","display","background","height","linearProgress","position","width","top","left","zIndex","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","backButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PageTemplate","props","history","useHistory","classes","useTheme","useState","isInit","setIsInit","setDrawerOpened","userMenuAnchorEl","setUserMenuAnchorEl","updateDrawerOpened","React","alertDialogOpened","setAlertDialogOpened","alertDialogOptions","setAlertDialogOptions","useEffect","afterInit","shouldInit","init","constructor","name","then","createAlertRef","options","alertDialog","Dialog","open","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","useSnackbar","enqueueSnackbar","closeSnackbar","createSnackbarRef","action","console","log","dismissable","key","IconButton","size","style","Close","fontSize","variant","anchorOrigin","vertical","horizontal","autoHideDuration","AppBar","className","clsx","Toolbar","edge","appBarBack","push","Typography","noWrap","appBarTitle","textTransform","e","currentTarget","AccountCircle","ArrowDropDown","anchorEl","getContentAnchorEl","transformOrigin","keepMounted","Boolean","MenuItem","component","Link","to","Drawer","anchor","paper","direction","Divider","List","routes","map","routeDetail","index","drawerItem","ListItem","button","selected","selectedId","path","ListItemIcon","icon","ListItemText","primary","errorDetail","errorCode","code","errorContent","Grid","container","marginTop","item","fontWeight","textAlign","CssBaseline","isLoading","LinearProgress","overflowY","children","Dashboard","a","xs","Card","CardContent","gutterBottom","CardActions","href","About","Paper","elevation","Contact","Box","m","p","Email","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","placeholder","multiline","rows","type","fontFamily","colorText","goDown","Home","checked","setChecked","Collapse","in","timeout","collapsedHeight","Index","redirectTo","HomeIcon","PersonIcon","Projects","DashboardIcon","EmailIcon","NotFound","RouterSwitches","doms","exact","App","DialogType","process","ReactRouterRoute","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CreateSnackbarContext","createContext","CreateSnackbarProvider","Provider","value","createSnackbar","DialogContext","dialogDetailsReducer","dialogDetails","newDialogDetails","loading","newDialogDetail","DialogProvider","useReducer","dispatchDialogDetails","createDialog","Math","floor","random","closeDialog","dialogDetail","createAlertDialog","Alert","createConfirmDialog","Confirm","PaperProps","minWidth","onExited","DialogProps","Customized","actions","alertActionText","disabled","onConfirmCancel","shouldClose","onConfirm","result","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.7bb92421.chunk.js","sourcesContent":["import Dashboard from \"./pages/Dashboard\";\r\n\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Home from \"./pages/Home\";\r\n\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Timeline as TimelineIcon,\r\n  Assessment as AssessmentIcon,\r\n  Person as PersonIcon,\r\n  Email as EmailIcon,\r\n  Home as HomeIcon\r\n} from '@material-ui/icons';\r\n\r\n\r\n\r\ninterface DrawerItem {\r\n  title: string,\r\n  icon?: any\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport enum RouteId {\r\n  Index,\r\n  About,\r\n  Dashboard,\r\n  Contact,\r\n  Home,\r\n  Projects\r\n}\r\n\r\nexport interface RoutedComponentProps {\r\n  routeDetail: RouteDetail\r\n}\r\n\r\ninterface RouteDetail {\r\n  id: RouteId,\r\n  path: string,\r\n  redirectTo?: string,\r\n  title?: string,\r\n  component: React.FC<RoutedComponentProps>,\r\n  exact?: boolean,    // Default: false\r\n  drawerItem?: DrawerItem\r\n}\r\n\r\n\r\nexport function findRouteDetailById(id: RouteId) {\r\n\r\n}\r\n\r\nconst routes: RouteDetail[] = [\r\n\r\n  // Index \r\n  {\r\n    id: RouteId.Index,\r\n    path: \"/\",\r\n    redirectTo: \"/home\",\r\n    component: Home \r\n  },\r\n  //home\r\n{\r\n  id: RouteId.Home,\r\n  path: \"/home\", \r\n  title: \"Home\",\r\n  component: Home,\r\n  drawerItem: {\r\n    title: \"Home\",\r\n    icon: HomeIcon\r\n  }\r\n},\r\n//About\r\n  \r\n{\r\n  id: RouteId.About,\r\n  path: \"/about\", \r\n  title: \"About\",\r\n  component: About,\r\n  drawerItem: {\r\n    title: \"About\",\r\n    icon: PersonIcon\r\n  }\r\n},\r\n  // Dashboard\r\n  {\r\n    id: RouteId.Projects,\r\n    path: \"/project\", \r\n    title: \"Projects\",\r\n    component: Dashboard,\r\n    drawerItem: {\r\n      title: \"Projects\",\r\n      icon: DashboardIcon\r\n    }\r\n  },\r\n  // {\r\n  //   id: RouteId.Test,\r\n  //   path: \"/test\", \r\n  //   title: \"test\",\r\n  //   component: Dashboard,\r\n  //   drawerItem: {\r\n  //     title: \"test\",\r\n  //     icon: TimelineIcon\r\n  //   }\r\n  // },\r\n\r\n  // {\r\n  //   id: RouteId.NotFound,\r\n  //   path: \"/404\", \r\n  //   title: \"404 not found\",\r\n  //   component: NotFound,\r\n  //   drawerItem: {\r\n  //     title: \"Not found\",\r\n  //     icon: AssessmentIcon\r\n  //   }\r\n  // }\r\n  // ,\r\n  {\r\n    id: RouteId.Contact,\r\n    path: \"/contact\", \r\n    title: \"Contact\",\r\n    component: Contact,\r\n    drawerItem: {\r\n      title: \"Contact\",\r\n      icon: EmailIcon\r\n    }\r\n  }\r\n  \r\n]\r\n\r\nexport default routes;","\r\nconst localStorageService = {\r\n  drawerOpened: {\r\n    set(flag: boolean) {\r\n      localStorage.setItem(\"drawerOpened\", JSON.stringify(flag));\r\n    },\r\n\r\n    unset() {\r\n      localStorage.removeItem(\"drawerOpened\");\r\n    },\r\n\r\n    get(): boolean {\r\n      // Default true\r\n      return !(JSON.parse(localStorage.getItem(\"drawerOpened\") as string) === false);\r\n    }\r\n  },\r\n\r\n}\r\n\r\nexport default localStorageService;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport routes, { RouteId } from '../routes';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, LinearProgress, Menu, MenuItem, Grid } from '@material-ui/core';\r\n\r\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\r\nimport { \r\n  Close as CloseIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n} from '@material-ui/icons';\r\nimport localStorageService from '../service/localStorageService';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport interface PageTemplateProps {\r\n  appBarTitle?: string;\r\n  appBarBack?: string;\r\n  selectedId?: RouteId;\r\n  isLoading?: boolean;  // Default: false\r\n\r\n  errorCode?: number;\r\n\r\n  // Return true or void if need to render children content\r\n  init?: () => void | boolean | Promise<void | boolean>;\r\n  createAlertRef?: (createAlert: (options?: AlertDialogOptions) => void) => void;\r\n  createSnackbarRef?: (createSnackbar: (options: SnackbarOptions) => void) => void;\r\n}\r\n\r\nexport interface AlertDialogOptions {\r\n  title: string;\r\n  message: string;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport interface SnackbarOptions {\r\n  message: string;\r\n  variant?: SnackbarVariantType;\r\n  dismissable?: boolean; // default: true\r\n  autoHideDuration?: number;  // default: 5000\r\n}\r\n\r\n\r\ntype ErrorDetail ={\r\n  code: number,\r\n  message: string\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    background: \"#EAEAEA\" , height:\"100vh\"\r\n  },\r\n  linearProgress: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '0.2em',\r\n    top: 0, \r\n    left: 0,\r\n    zIndex: 2000\r\n  },\r\n  appBar: {\r\n    background: \"#23395d\",\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n\r\n  const [isInit, setIsInit] = useState(false);\r\n  // const [canUpdateUserRole, setCanUpdateUserRole] = useState(false);\r\n  const [drawerOpened, setDrawerOpened] = useState(localStorageService.drawerOpened.get());\r\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState(null);\r\n\r\n  const updateDrawerOpened = (flag: boolean) => {\r\n    setDrawerOpened(flag);\r\n    localStorageService.drawerOpened.set(flag);\r\n  }\r\n\r\n  const [alertDialogOpened, setAlertDialogOpened] = React.useState(false);\r\n  const [alertDialogOptions, setAlertDialogOptions] = React.useState({} as AlertDialogOptions)\r\n\r\n  useEffect(() => {\r\n\r\n    const afterInit = (shouldInit: boolean | void) => {\r\n      setIsInit(!(shouldInit === false));\r\n    };\r\n        if (props.init) { \r\n\r\n          if (props.init.constructor.name === \"AsyncFunction\") {\r\n         \r\n            (props.init as () => Promise<boolean | void>)().then(afterInit);\r\n          } else {\r\n           \r\n            afterInit((props.init as () => boolean | void)());\r\n          }\r\n        } else {\r\n          setIsInit(true);\r\n        }\r\n\r\n  }, []);\r\n\r\n\r\n  if (props.createAlertRef) {\r\n    let createAlert = (options?: AlertDialogOptions) => {\r\n      if (options) {\r\n        setAlertDialogOptions(options);\r\n        setAlertDialogOpened(true);\r\n      }\r\n    }\r\n    props.createAlertRef(createAlert);\r\n  }\r\n\r\n  const alertDialog = (\r\n    <Dialog\r\n      open={alertDialogOpened}\r\n      onClose={() => {\r\n        setAlertDialogOpened(false);\r\n      }}\r\n      // onExit={() => {\r\n      //   if (alertDialogOptions.onClose) {\r\n      //     alertDialogOptions.onClose();\r\n      //   }\r\n      // }}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{alertDialogOptions.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {alertDialogOptions.message}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setAlertDialogOpened(false)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  if (props.createSnackbarRef) {\r\n    let createSnackbar = (options: SnackbarOptions) => {\r\n      console.log(\"Creating snackbar\");\r\n      var action; \r\n\r\n      if (options.dismissable !== false)\r\n      action = (key: any) => (\r\n        <IconButton \r\n          size=\"small\" \r\n          style={{color: 'white'}} \r\n          aria-label=\"dismiss\"\r\n          onClick={() => {\r\n            closeSnackbar(key);\r\n          }}\r\n        >\r\n          <CloseIcon \r\n            fontSize=\"small\"\r\n          />\r\n        </IconButton>\r\n        \r\n    );\r\n      enqueueSnackbar(\r\n        options.message, {\r\n          variant: options.variant,\r\n          anchorOrigin: {\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          },\r\n          autoHideDuration: options.autoHideDuration || 5000,\r\n          action\r\n        }\r\n      );\r\n    }\r\n    props.createSnackbarRef(createSnackbar);\r\n  }\r\n\r\n\r\n  const appBar = (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: drawerOpened,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={() => updateDrawerOpened(true)}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, drawerOpened && classes.hide)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        {\r\n          props.appBarBack && \r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Back\"\r\n              onClick={() => history.push(props.appBarBack as any)}\r\n              edge=\"start\"\r\n              className={classes.backButton}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n        }\r\n        \r\n        <Typography variant=\"h6\" noWrap>\r\n          {props.appBarTitle}\r\n        </Typography>\r\n\r\n        <Button\r\n          color=\"inherit\"\r\n          style={{marginLeft: \"auto\", textTransform: \"none\"}}\r\n          size=\"large\"\r\n          onClick={(e: any) => {\r\n            setUserMenuAnchorEl(e.currentTarget);\r\n          }}\r\n        >\r\n          <AccountCircleIcon style={{marginRight: \"0.5em\"}} />\r\n          <ArrowDropDownIcon style={{marginLeft: \"0.1em\"}} />\r\n        </Button>\r\n\r\n        <Menu\r\n          anchorEl={userMenuAnchorEl}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          keepMounted\r\n          open={Boolean(userMenuAnchorEl)}\r\n          onClose={() => {\r\n            setUserMenuAnchorEl(null);\r\n          }}\r\n        >\r\n          <MenuItem\r\n            component={Link}\r\n            to=\"/settings\"\r\n          >\r\n            Settings\r\n          </MenuItem>\r\n          \r\n          <MenuItem\r\n            component={Link}\r\n            to=\"/user/logout\"\r\n          >\r\n            Logout\r\n          </MenuItem>\r\n        </Menu>\r\n\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n\r\n\r\n  const drawer = (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={drawerOpened}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        Menu\r\n        <IconButton onClick={() => updateDrawerOpened(false)}>\r\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {routes.map((routeDetail, index) => {\r\n          let drawerItem = routeDetail.drawerItem\r\n          if (drawerItem) {\r\n            return (\r\n              <ListItem \r\n                key={index}\r\n                button={true}\r\n                selected={routeDetail.id === props.selectedId}\r\n                component={Link}\r\n                to={routeDetail.path}\r\n              >\r\n                <ListItemIcon><drawerItem.icon /></ListItemIcon>\r\n                <ListItemText primary={drawerItem.title} />\r\n              </ListItem>\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n        }\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n\r\n  var errorDetail: ErrorDetail = {} as ErrorDetail;\r\n\r\n  if (props.errorCode != null) {\r\n    errorDetail = {\r\n      code: props.errorCode,\r\n      message: \"\"\r\n    };\r\n    \r\n    switch (props.errorCode) {\r\n      case 403: \r\n        errorDetail.message = \"Forbidden\";\r\n      break;\r\n  \r\n      case 404: \r\n        errorDetail.message = \"Page Not Found\";\r\n      break;\r\n  \r\n      case 500:\r\n        errorDetail.message = \"Server Error\";\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  var errorContent = errorDetail ? (\r\n    <Grid \r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        marginTop: '5em'\r\n      }}\r\n    >\r\n      <Grid item\r\n        style={{\r\n          fontSize: '5em',\r\n          fontWeight: 'bold',\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {errorDetail.code}\r\n      </Grid>\r\n      <Grid item\r\n        style={{\r\n          fontSize: '1.5em',\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {errorDetail.message}\r\n      </Grid>\r\n    </Grid>\r\n  ) : null;\r\n\r\n  return (\r\n    (<div className={classes.root}>\r\n      <CssBaseline />\r\n      {props.isLoading && <LinearProgress color=\"secondary\" className={classes.linearProgress}/>}\r\n      {alertDialog}\r\n      {appBar}\r\n      {drawer}\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: drawerOpened,\r\n        })}\r\n        // style={{background: \"#EAEAEA\"}}\r\n        style={{background: \"#EAEAEA\" ,overflowY:\"auto\" }}\r\n      >\r\n        <div className={classes.drawerHeader}  />\r\n        {isInit ? props.errorCode == null ? props.children:null:null}\r\n        {errorContent}\r\n      </main>\r\n    </div>)\r\n  );\r\n}\r\n\r\nexport default PageTemplate;","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst Dashboard: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hi\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Project\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Project\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" href=\"https://github.com/eugenieeeech\">\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Project3\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" href=\"https://github.com/eugenieeeech\">\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Word of the Day\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" href=\"https://github.com/eugenieeeech\">\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n    \r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst About: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hello world\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction={\"column\"}\r\n        spacing={2}\r\n      >\r\n        <Grid container justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Paper elevation={6}>\r\n              I am Eugenie Cheng. I am a final year university student who is\r\n              pursuing a Bachelor of Computer Science at The Chinese university\r\n              of Hong Kong (CUHK). As a computer science major student, I have\r\n              learnt different programming skills and knowledge from various\r\n              courses and projects. For instance, throughout the Software\r\n              Engineering Course, I have learnt the basic knowledge about\r\n              full-stack web development and the principle of software\r\n              development. In the course Principle of Computer Graphics, I\r\n              worked in a team of two and developed a 3D game that included\r\n              object generating, texturing and interactions.I have learnt about\r\n              Object-oriented Programming (OOP). Furthermore, I am eager to\r\n              learn new technologies such as Artificial Intelligence and new\r\n              API. I have taken related courses and workshops to stay up to date\r\n              on industry trends and seek for advancements. This allowed me to\r\n              step outside my comfort zone and keep exploring new knowledge. In\r\n              addition to my programming experience, my previous two summer\r\n              internships position is software engineer. I mainly worked as a\r\n              developer, expericened in both front-end and back-end. For the\r\n              first internship, I was building UI in the application,\r\n              implementing new functions in the application, organizing the code\r\n              and coding with Flutter. For my second internship, I worked on\r\n              back-end api for native app. I have learnt about SpringBoot,\r\n              Kotlin and usage of different structure of application. I have\r\n              quickly gained some mobile application developing skills during my\r\n              internship. I believe I am a quick learner that would fit into a\r\n              different working environment quickly.\r\n            </Paper>\r\n          </Grid>\r\n          <Paper elevation={6}>\r\n            Course taken in CUHK: AIST2010-Intro to Computer Music\r\n            CSCI1130-Intro to Computing Using Java CSCI2100-Data Structures\r\n            CSCI3100-Software Engineering CSCI3150-Intro to Operating Systems\r\n            CSCI3160-Design & Analysis of Algo CSCI3230-Fundamentals of AI\r\n            CSCI3250-Computers and Society CSCI3251-Engineering Practicum\r\n            CSCI3260-Principles of Comp Graphics CSCI4120-Principles of Comp\r\n            Game SW Minor(JAPANESE): JASP1450-New Practical Japanese I\r\n            JASP1460-New Practical Japanese II JASP2450-New Practical Japanese\r\n            III JASP2460-New Practical Japanese IV\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Email as EmailIcon,\r\n} from '@material-ui/icons';\r\n\r\n// import backendApi from \"../../backendApi\";\r\nconst Contact: React.FC<RoutedComponentProps> = (props) => {\r\n  var cardStyle = {\r\n    display: 'block',\r\n    width: '100vw',\r\n    height: 'auto'\r\n}\r\n  console.log(\"find me?\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n  // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n  //   event.preventDefault();\r\n  //   const data = new FormData(event.currentTarget);\r\n  //   // eslint-disable-next-line no-console\r\n  //   console.log({\r\n  //     email: data.get(\"email\"),\r\n  //     message: data.get(\"message\"),\r\n  //   });\r\n  // };\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid container justifyContent=\"center\"\r\n          alignItems=\"center\" item spacing={2}\r\n          direction=\"row\">\r\n        <Grid item container>\r\n          <Box width={1} display=\"flex\" justifyContent=\"center\" \r\n          m={2}\r\n          >\r\n        <Card style={cardStyle}>\r\n          <Box p={1} ><Typography variant=\"h5\" component=\"h5\"><EmailIcon/>Contact</Typography></Box>\r\n          <Box p={1} >Email:</Box>\r\n          <Box p={1}><a href=\"mailto:{{eugenie.630.cheng@gmail.com}}\"> Click here</a></Box>\r\n          <Box p={1}>Linkedin:</Box>\r\n          <Box p={1}><Link href=\"https://www.linkedin.com/in/eugenie-cheng-eugenieeeech/\">Eugenie Cheng</Link></Box>\r\n        </Card>\r\n        </Box>\r\n\r\n          <Grid><Typography variant=\"h5\" component=\"h5\">Leave Your Message</Typography></Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Message\"\r\n                placeholder=\"Enter Your Message\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\"></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport routes, { RoutedComponentProps } from \"../../routes\";\r\nimport { Collapse, Grid, IconButton } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { Link } from 'react-router-dom';\r\n// import backendApi from \"../../backendApi\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Nunito',\r\n  },\r\n  colorText: {\r\n    color: '#5AFF3D',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontSize: '4.5rem',\r\n  },\r\n  goDown: {\r\n    color: '#5AFF3D',\r\n    fontSize: '4rem',\r\n  },\r\n}));\r\nconst Home: React.FC<RoutedComponentProps> = (props) => {\r\n  \r\n  console.log(\"welcome\")\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n    (async () => {\r\n    })().then();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n        collapsedHeight={50}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to <br />\r\n            My<span className={classes.colorText}>Page.</span>\r\n          </h1>\r\n          <Link to={'/about'}>\r\n              <IconButton>\r\n              <ExpandMoreIcon className={classes.goDown}></ExpandMoreIcon>\r\n            </IconButton> </Link>\r\n        </div>\r\n      </Collapse>\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\n\r\nconst NotFound: React.FC = (props) => {\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle=\"Error\"\r\n      errorCode={404}\r\n    >    \r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport NotFound from './pages/NotFound';\r\nimport { QueryParamProvider } from 'use-query-params';\r\n\r\nfunction RouterSwitches(): JSX.Element[] {\r\n\r\n  let doms: JSX.Element[] = [];\r\n\r\n  for (let routeDetail of routes) {\r\n    let exact = true;  // Default true\r\n    if (routeDetail.exact === false) {\r\n      exact = false;\r\n    }\r\n\r\n    var children;\r\n\r\n    if (routeDetail.redirectTo) {\r\n      children = <Redirect to={routeDetail.redirectTo} />;\r\n    } else {\r\n      children = <routeDetail.component routeDetail={routeDetail} />\r\n       \r\n    }\r\n    doms.push(\r\n      <Route \r\n        key={routeDetail.id}\r\n        exact={exact} \r\n        path={routeDetail.path} \r\n      >\r\n        {children}\r\n      </Route>\r\n    )\r\n  }\r\n  return doms;\r\n}\r\n\r\nfunction App() {\r\n\r\n  console.log(process.env);\r\n  return (\r\n    <Router>\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        <Switch>\r\n          {RouterSwitches()}\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </QueryParamProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {  useReducer } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, DialogProps } from \"@material-ui/core\";\r\n\r\nexport enum DialogType {\r\n  Alert, \r\n  Confirm,\r\n  Customized,\r\n}\r\n\r\nexport interface DialogOptions {\r\n  title: string | JSX.Element;\r\n  message: string | JSX.Element;\r\n  type?: DialogType;    // Default alert\r\n  key?: number;\r\n\r\n  DialogProps?: Partial<DialogProps>;\r\n\r\n  onClose?: () => void; // For all\r\n\r\n  alertActionText?: string; // Default \"OK\"\r\n\r\n  actions?: JSX.Element;\r\n\r\n  // action?: React.ReactNode | React.ReactNode[];     // Override default action\r\n  onConfirm?: () => boolean | void | Promise<boolean | void>;   // For confirm\r\n  onConfirmCancel?: () => boolean | void | Promise<boolean | void>; // For confirm\r\n}\r\n\r\ninterface DialogDetails {\r\n  key?: number;\r\n  open: boolean;\r\n  loading: boolean;\r\n  options: DialogOptions;\r\n\r\n\r\n\r\n}\r\n\r\n// https://www.basefactor.com/global-state-with-react\r\n// https://dev.to/oieduardorabelo/react-hooks-how-to-create-and-update-contextprovider-1f68\r\n// https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\r\n//const defaultGlobalState: AlertDialogDetails[] = [];\r\n\r\n\r\ntype CreateDialogFunction = (options: DialogOptions) => number;\r\n\r\nexport const DialogContext = React.createContext<{\r\n  closeDialog: (key: any) => void,\r\n  createDialog: CreateDialogFunction,\r\n  createAlertDialog: CreateDialogFunction,\r\n  createConfirmDialog: CreateDialogFunction,\r\n}| null>(null);\r\n\r\nexport const useDialog = () => {\r\n  return React.useContext(DialogContext);\r\n}\r\n\r\ninterface DialogDetailsReducerAction {\r\n  type: 'add' | 'close' | 'loading';\r\n  options?: DialogOptions;  // add\r\n  key?: number; // close\r\n  loading?: boolean;  // loading\r\n};\r\n\r\nconst dialogDetailsReducer = (dialogDetails: DialogDetails[], action: DialogDetailsReducerAction) => {\r\n  var newDialogDetails = [...dialogDetails];\r\n\r\n  switch (action.type) {\r\n    case 'add':\r\n      newDialogDetails.push({\r\n        key: action.key,\r\n        open: true,\r\n        loading: false,\r\n        options: action.options as DialogOptions\r\n      })\r\n    break;\r\n\r\n    case 'close':\r\n    case 'loading': \r\n\r\n      // Find dialog details by key\r\n      for (let newDialogDetail of newDialogDetails) {\r\n        if (newDialogDetail.key === action.key) {\r\n          switch (action.type) {\r\n            case 'close': \r\n              newDialogDetail.open = false;\r\n            break;\r\n\r\n            case 'loading':\r\n              newDialogDetail.loading = action.loading as boolean;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    break;\r\n  }\r\n  return newDialogDetails;\r\n}\r\n\r\nconst DialogProvider: React.FC<{}> = (props) => {\r\n  const [dialogDetails, dispatchDialogDetails] = useReducer(\r\n    dialogDetailsReducer,\r\n    [] as DialogDetails[]  // initial state\r\n  );\r\n\r\n  const closeDialog = (key: any) => {\r\n    for (let dialogDetail of dialogDetails) {\r\n      if (dialogDetail.key === key) {\r\n        dialogDetail.open = false;\r\n      }\r\n    }\r\n    //setDialogDetails([...dialogDetails]);\r\n  }\r\n\r\n  const createDialog = (options: DialogOptions) => {\r\n    var key = options.key || Math.floor(Math.random() * 10000000);\r\n    options.key = key;\r\n\r\n    dispatchDialogDetails({\r\n      type: 'add',\r\n      key: key,\r\n      options: options\r\n    })\r\n    return key; \r\n  }\r\n\r\n  const createAlertDialog = (options: DialogOptions) => {\r\n    return createDialog({\r\n      type: DialogType.Alert,\r\n      ...options\r\n    });\r\n  }\r\n\r\n  const createConfirmDialog = (options: DialogOptions) => {\r\n    return createDialog({\r\n      type: DialogType.Confirm,\r\n      ...options\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <DialogContext.Provider value={{\r\n      closeDialog,\r\n      createDialog, \r\n      createAlertDialog,\r\n      createConfirmDialog,\r\n    }}>\r\n      {\r\n        dialogDetails && dialogDetails.map((dialogDetail, index) => {\r\n          //console.log(dialogDetail.key);\r\n          return (\r\n            <Dialog\r\n              key={dialogDetail.key}\r\n              fullWidth={true}\r\n              PaperProps={{\r\n                style: {\r\n                  minWidth: '320px'\r\n                }\r\n              }}\r\n              open={dialogDetail.open}\r\n              onClose={() => {\r\n                if (dialogDetail.options.onClose) {\r\n                  dialogDetail.options.onClose();\r\n                }\r\n                \r\n              }}\r\n              onExited={() => {\r\n                // Delete this alert dialog from detail\r\n                // dialogDetails.filter((obj) => {\r\n                //   return obj != dialogDetail;\r\n                // });\r\n                // setDialogDetails([...dialogDetails]);\r\n              }}\r\n              {...dialogDetail.options.DialogProps}\r\n            >\r\n              <DialogTitle>{dialogDetail.options.title}</DialogTitle>\r\n              <DialogContent>\r\n                {\r\n                  typeof(dialogDetail.options.message) === \"string\" && (\r\n                  <DialogContentText>\r\n                    {dialogDetail.options.message}\r\n                  </DialogContentText>\r\n                  )\r\n                }\r\n                {\r\n                  typeof(dialogDetail.options.message) != \"string\" && (\r\n                    dialogDetail.options.message\r\n                  )\r\n                }\r\n\r\n              </DialogContent>\r\n              <DialogActions>\r\n                {\r\n                  dialogDetail.options.type === DialogType.Customized &&\r\n                  dialogDetail.options.actions\r\n                }\r\n\r\n                {\r\n                  (dialogDetail.options.type === DialogType.Alert) &&\r\n                  <Button \r\n                    onClick={() => {\r\n                      dispatchDialogDetails({\r\n                        type: 'close',\r\n                        key: dialogDetail.key\r\n                      })\r\n                    }}\r\n                    color=\"primary\">\r\n                    {dialogDetail.options.alertActionText || \"Okay\"}\r\n                  </Button>\r\n                }\r\n                \r\n                {\r\n                  (dialogDetail.options.type === DialogType.Confirm) &&\r\n                  <Button \r\n                    disabled={dialogDetail.loading}\r\n                    onClick={() => {\r\n                      dispatchDialogDetails({\r\n                        type: 'close',\r\n                        key: dialogDetail.key\r\n                      })\r\n                      \r\n                      if (dialogDetail.options.onConfirmCancel) {\r\n                        dialogDetail.options.onConfirmCancel();\r\n                      }\r\n                    }}\r\n                    color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                }\r\n                {\r\n                  (dialogDetail.options.type === DialogType.Confirm) &&\r\n                  <Button \r\n                    disabled={dialogDetail.loading}\r\n                    onClick={async () => {\r\n                      \r\n                      var shouldClose = true;\r\n                      \r\n\r\n                      if (dialogDetail.options.onConfirm) {\r\n                        dispatchDialogDetails({\r\n                          type: 'loading',\r\n                          key: dialogDetail.key,\r\n                          loading: true\r\n                        })\r\n                        let result = await dialogDetail.options.onConfirm();\r\n                        dispatchDialogDetails({\r\n                          type: 'loading',\r\n                          key: dialogDetail.key,\r\n                          loading: false\r\n                        });\r\n\r\n                        shouldClose = !(result === false);\r\n                      }\r\n\r\n                      if (shouldClose) {\r\n                        dispatchDialogDetails({\r\n                          type: 'close',\r\n                          key: dialogDetail.key\r\n                        })\r\n                      }\r\n                      \r\n                    }}\r\n                    color=\"secondary\">\r\n                    Confirm\r\n                  </Button>\r\n                }\r\n              </DialogActions>\r\n            </Dialog>\r\n          )\r\n        })\r\n      }\r\n      {props.children}\r\n    </DialogContext.Provider>\r\n  )\r\n}\r\n\r\nexport default DialogProvider;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\n\r\nexport interface CreateSnackbarOptions {\r\n  message: string;\r\n  variant?: SnackbarVariantType;\r\n  dismissable?: boolean; // default: true\r\n  autoHideDuration?: number;  // default: 5000\r\n}\r\n\r\nexport const CreateSnackbarContext = React.createContext<{\r\n  createSnackbar: (options: CreateSnackbarOptions) => void\r\n}| null>(null);\r\n\r\nexport const useCreateSnackbar = () => {\r\n  return React.useContext(CreateSnackbarContext);\r\n}\r\n\r\nconst CreateSnackbarProvider: React.FC<{}> = (props) => {\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const createSnackbar = (options: CreateSnackbarOptions) => {\r\n    console.log(\"Creating snackbar\");\r\n    var action; \r\n\r\n    if (options.dismissable !== false) {\r\n      action = (key : any) => (\r\n        <IconButton \r\n          size=\"small\" \r\n          style={{color: 'white'}} \r\n          aria-label=\"dismiss\"\r\n          onClick={() => {\r\n            closeSnackbar(key);\r\n          }}\r\n        >\r\n          <CloseIcon \r\n            fontSize=\"small\"\r\n          />\r\n        </IconButton>\r\n        \r\n      );\r\n    }\r\n\r\n    enqueueSnackbar(\r\n      options.message, {\r\n        variant: options.variant,\r\n        anchorOrigin: {\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        },\r\n        autoHideDuration: options.autoHideDuration || 5000,\r\n        action\r\n      }\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CreateSnackbarContext.Provider value={{createSnackbar}}>\r\n        {props.children}\r\n    </CreateSnackbarContext.Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default CreateSnackbarProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport CreateSnackbarProvider from './components/CreateSnackbarProvider';\r\nimport DialogProvider from './components/DialogProvider';\r\n\r\nReactDOM.render(\r\n  <SnackbarProvider maxSnack={5}>\r\n  <CreateSnackbarProvider>\r\n    <DialogProvider>\r\n      <App />\r\n    </DialogProvider>\r\n  </CreateSnackbarProvider>\r\n</SnackbarProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}