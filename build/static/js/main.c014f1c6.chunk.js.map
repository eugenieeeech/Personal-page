{"version":3,"sources":["routes.tsx","service/localStorageService.tsx","components/PageTemplate.tsx","pages/Dashboard/index.tsx","pages/About/index.tsx","pages/Contact/index.tsx","pages/Home/index.tsx","pages/NotFound/index.tsx","App.tsx","components/DialogProvider.tsx","reportWebVitals.ts","components/CreateSnackbarProvider.tsx","index.tsx"],"names":["RouteId","localStorageService","drawerOpened","set","flag","localStorage","setItem","JSON","stringify","unset","removeItem","get","parse","getItem","drawerWidth","useStyles","makeStyles","theme","root","display","background","height","linearProgress","position","width","top","left","zIndex","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","backButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PageTemplate","props","history","useHistory","classes","useTheme","useState","isInit","setIsInit","setDrawerOpened","updateDrawerOpened","React","alertDialogOpened","setAlertDialogOpened","alertDialogOptions","setAlertDialogOptions","useEffect","afterInit","shouldInit","init","constructor","name","then","createAlertRef","options","alertDialog","Dialog","open","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","useSnackbar","enqueueSnackbar","closeSnackbar","createSnackbarRef","action","console","log","dismissable","key","IconButton","size","style","Close","fontSize","variant","anchorOrigin","vertical","horizontal","autoHideDuration","AppBar","className","clsx","Toolbar","edge","appBarBack","push","Typography","noWrap","appBarTitle","Drawer","anchor","paper","direction","Divider","List","routes","map","routeDetail","index","drawerItem","ListItem","button","selected","selectedId","component","Link","to","path","ListItemIcon","icon","ListItemText","primary","errorDetail","errorCode","code","errorContent","Grid","container","marginTop","item","fontWeight","textAlign","CssBaseline","isLoading","LinearProgress","overflowY","children","Dashboard","a","fanGameProject","xs","Card","CardContent","gutterBottom","CardActions","href","MGMProject","CurrencyProject","startIcon","busTerminus","Rhythm","columns","field","headerName","flex","rows","subject","About","shortIntro","align","margin","paddingBottom","pageSize","Contact","contactform","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","placeholder","multiline","type","contactcard","Box","m","p","Email","fontFamily","colorText","goDown","Home","checked","setChecked","Collapse","in","timeout","collapsedHeight","Index","redirectTo","HomeIcon","PersonIcon","Projects","DashboardIcon","EmailIcon","NotFound","RouterSwitches","doms","exact","App","DialogType","process","ReactRouterRoute","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CreateSnackbarContext","createContext","CreateSnackbarProvider","Provider","value","createSnackbar","DialogContext","dialogDetailsReducer","dialogDetails","newDialogDetails","loading","newDialogDetail","DialogProvider","useReducer","dispatchDialogDetails","createDialog","Math","floor","random","closeDialog","dialogDetail","createAlertDialog","Alert","createConfirmDialog","Confirm","PaperProps","minWidth","onExited","DialogProps","Customized","actions","alertActionText","disabled","onConfirmCancel","shouldClose","onConfirm","result","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"6IAuBYA,E,2YCJGC,EAlBa,CAC1BC,aAAc,CACZC,IADY,SACRC,GACFC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,KAGtDK,MALY,WAMVJ,aAAaK,WAAW,iBAG1BC,IATY,WAWV,SAAwE,IAA/DJ,KAAKK,MAAMP,aAAaQ,QAAQ,qB,OCezCC,EAAc,IAmCdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,WAAY,UAAYC,OAAO,SAEjCC,eAAgB,CACdC,SAAU,QACVC,MAAO,OACPH,OAAQ,QACRI,IAAK,EACLC,KAAM,EACNC,OAAQ,KAEVC,OAAQ,CACNR,WAAY,UACZS,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,iBAGzCC,YAAa,CACXZ,MAAM,eAAD,OAAiBV,EAAjB,OACLuB,WAAYvB,EACZe,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQf,EAAMa,YAAYE,OAAOM,QACjCJ,SAAUjB,EAAMa,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAaxB,EAAMyB,QAAQ,IAE7BC,WAAY,CACVF,YAAaxB,EAAMyB,QAAQ,IAE7BE,KAAM,CACJzB,QAAS,QAEX0B,OAAQ,CACNrB,MAAOV,EACPgC,WAAY,GAEdC,YAAa,CACXvB,MAAOV,GAETkC,aAAa,yBACX7B,QAAS,OACT8B,WAAY,SACZC,QAASjC,EAAMyB,QAAQ,EAAG,IAEvBzB,EAAMkC,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASjC,EAAMyB,QAAQ,GACvBb,WAAYZ,EAAMa,YAAYC,OAAO,SAAU,CAC7CC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,gBAEvCE,YAAY,KAEdmB,aAAc,CACZ3B,WAAYZ,EAAMa,YAAYC,OAAO,SAAU,CAC7CC,OAAQf,EAAMa,YAAYE,OAAOM,QACjCJ,SAAUjB,EAAMa,YAAYI,SAASK,iBAEvCF,WAAY,OAwRDoB,EApRmC,SAACC,GAEjD,IAAMC,EAAUC,cAEVC,EAAU9C,IACVE,EAAQ6C,cAGd,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAwCF,oBAAS,GAAjD,mBAAO7D,EAAP,KAAqBgE,EAArB,KAGMC,EAAqB,SAAC/D,GAC1B8D,EAAgB9D,GAChBH,EAAoBC,aAAaC,IAAIC,IAGvC,EAAkDgE,IAAML,UAAS,GAAjE,mBAAOM,EAAP,KAA0BC,EAA1B,KACA,EAAoDF,IAAML,SAAS,IAAnE,oBAAOQ,GAAP,MAA2BC,GAA3B,MAuBA,GArBAC,qBAAU,WAER,IAAMC,EAAY,SAACC,GACjBV,KAA2B,IAAfU,KAENjB,EAAMkB,KAE4B,kBAAhClB,EAAMkB,KAAKC,YAAYC,KAExBpB,EAAMkB,OAAyCG,KAAKL,GAGrDA,EAAWhB,EAAMkB,QAGnBX,GAAU,KAGf,IAGCP,EAAMsB,eAAgB,CAOxBtB,EAAMsB,gBANY,SAACC,GACbA,IACFT,GAAsBS,GACtBX,GAAqB,OAM3B,IAAMY,GACJ,eAACC,EAAA,EAAD,CACEC,KAAMf,EACNgB,QAAS,WACPf,GAAqB,IAOvB,kBAAgB,qBAChB,mBAAiB,2BAXnB,UAaE,cAACgB,EAAA,EAAD,CAAaC,GAAG,qBAAhB,SAAsChB,GAAmBiB,QACzD,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBH,GAAG,2BAAtB,SACGhB,GAAmBoB,YAGxB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMxB,GAAqB,IAAQyB,MAAM,UAA1D,uBAON,GAA2CC,cAAnCC,GAAR,GAAQA,gBAAiBC,GAAzB,GAAyBA,cAEzB,GAAIxC,EAAMyC,kBAAmB,CAiC3BzC,EAAMyC,mBAhCe,SAAClB,GAEpB,IAAImB,EADJC,QAAQC,IAAI,sBAGgB,IAAxBrB,EAAQsB,cACZH,EAAS,SAACI,GAAD,OACP,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAO,CAACZ,MAAO,SACf,aAAW,UACXD,QAAS,WACPI,GAAcM,IALlB,SAQE,cAACI,EAAA,EAAD,CACEC,SAAS,cAKfZ,GACEhB,EAAQU,QAAS,CACfmB,QAAS7B,EAAQ6B,QACjBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,iBAAkBjC,EAAQiC,kBAAoB,IAC9Cd,cAQR,IAAMxE,GACJ,cAACuF,EAAA,EAAD,CACE5F,SAAS,QACT6F,UAAWC,YAAKxD,EAAQjC,OAAT,eACZiC,EAAQzB,YAAclC,IAH3B,SAME,eAACoH,EAAA,EAAD,WACE,cAACb,EAAA,EAAD,CACEV,MAAM,UACN,aAAW,cACXD,QAAS,kBAAM3B,GAAmB,IAClCoD,KAAK,QACLH,UAAWC,YAAKxD,EAAQrB,WAAYtC,GAAgB2D,EAAQjB,MAL9D,SAOE,cAAC,IAAD,MAGAc,EAAM8D,YACJ,cAACf,EAAA,EAAD,CACEV,MAAM,UACN,aAAW,OACXD,QAAS,kBAAMnC,EAAQ8D,KAAK/D,EAAM8D,aAClCD,KAAK,QACLH,UAAWvD,EAAQlB,WALrB,SAOE,cAAC,IAAD,MAIN,cAAC+E,EAAA,EAAD,CAAYZ,QAAQ,KAAKa,QAAM,EAA/B,SACGjE,EAAMkE,mBAQT/E,GACJ,eAACgF,EAAA,EAAD,CACET,UAAWvD,EAAQhB,OACnBiE,QAAQ,aACRgB,OAAO,OACP1C,KAAMlF,EACN2D,QAAS,CACPkE,MAAOlE,EAAQd,aANnB,UASE,sBAAKqE,UAAWvD,EAAQb,aAAxB,iBAEE,cAACyD,EAAA,EAAD,CAAYX,QAAS,kBAAM3B,GAAmB,IAA9C,SACuB,QAApBlD,EAAM+G,UAAsB,cAAC,IAAD,IAAsB,cAAC,IAAD,SAGvD,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGC,GAAOC,KAAI,SAACC,EAAaC,GACxB,IAAIC,EAAaF,EAAYE,WAC7B,OAAIA,EAEA,eAACC,EAAA,EAAD,CAEEC,QAAQ,EACRC,SAAUL,EAAY9C,KAAO7B,EAAMiF,WACnCC,UAAWC,IACXC,GAAIT,EAAYU,KALlB,UAOE,cAACC,EAAA,EAAD,UAAc,cAACT,EAAWU,KAAZ,MACd,cAACC,EAAA,EAAD,CAAcC,QAASZ,EAAW/C,UAP7B8C,GAWJ,aAQXc,GAA2B,GAE/B,GAAuB,MAAnB1F,EAAM2F,UAMR,OALAD,GAAc,CACZE,KAAM5F,EAAM2F,UACZ1D,QAAS,IAGHjC,EAAM2F,WACZ,KAAK,IACHD,GAAYzD,QAAU,YACxB,MAEA,KAAK,IACHyD,GAAYzD,QAAU,iBACxB,MAEA,KAAK,IACHyD,GAAYzD,QAAU,eAM5B,IAAI4D,GAAeH,GACjB,eAACI,EAAA,EAAD,CACEC,WAAS,EACTzB,UAAU,SACV3E,eAAe,SACfJ,WAAW,SACX0D,MAAO,CACL+C,UAAW,OANf,UASE,cAACF,EAAA,EAAD,CAAMG,MAAI,EACRhD,MAAO,CACLE,SAAU,MACV+C,WAAY,OACZC,UAAW,UAJf,SAOGT,GAAYE,OAEf,cAACE,EAAA,EAAD,CAAMG,MAAI,EACRhD,MAAO,CACLE,SAAU,QACVgD,UAAW,UAHf,SAMGT,GAAYzD,aAGf,KAEJ,OACG,sBAAKyB,UAAWvD,EAAQ3C,KAAxB,UACC,cAAC4I,EAAA,EAAD,IACCpG,EAAMqG,WAAa,cAACC,EAAA,EAAD,CAAgBjE,MAAM,YAAYqB,UAAWvD,EAAQvC,iBACxE4D,GACAtD,GACAiB,GACD,uBACEuE,UAAWC,YAAKxD,EAAQP,QAAT,eACZO,EAAQL,aAAetD,IAG1ByG,MAAO,CAACvF,WAAY,UAAW6I,UAAU,QAL3C,UAOE,qBAAK7C,UAAWvD,EAAQb,eACvBgB,GAA4B,MAAnBN,EAAM2F,UAAoB3F,EAAMwG,SAAc,KACvDX,U,kDC3MMY,GA1LmC,SAACzG,GACjD2C,QAAQC,IAAI,MACZ7B,qBAAU,WACR,sBAAC,sBAAA2F,EAAA,yFAAD,GAAmBrF,SAClB,IAEH,IAAIsF,EACF,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC3D,QAAQ,KAAK8B,UAAU,KAAhD,qDAGA,cAAClB,EAAA,EAAD,CAAYZ,QAAQ,QAAQf,MAAM,gBAAgB6C,UAAU,IAA5D,+JAOF,cAAC8B,GAAA,EAAD,UACE,cAAC7E,EAAA,EAAD,CACEa,KAAK,QACLX,MAAM,UACN4E,KAAK,qCAHP,yBAYJC,EACF,cAACpB,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,CAAM5D,MAAO,CAACtF,OAAO,QAArB,UACE,eAACmJ,GAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC3D,QAAQ,KAAK8B,UAAU,KAAhD,4CAGA,cAAClB,EAAA,EAAD,CAAYZ,QAAQ,QAAQf,MAAM,gBAAgB6C,UAAU,IAA5D,kEAKF,cAAC8B,GAAA,EAAD,UACE,cAAC7E,EAAA,EAAD,CACEa,KAAK,QACLX,MAAM,UACN4E,KAAK,sEAHP,yBAYJE,EACF,cAACrB,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC3D,QAAQ,KAAK8B,UAAU,KAAhD,oCAGA,cAAClB,EAAA,EAAD,CAAYZ,QAAQ,QAAQf,MAAM,gBAAgB6C,UAAU,IAA5D,6GAMF,cAAC8B,GAAA,EAAD,UACE,cAAC7E,EAAA,EAAD,CACEa,KAAK,QACLX,MAAM,UACN4E,KAAK,uDACLG,UAAW,cAAC,KAAD,IAJb,2BAaJC,EACF,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC3D,QAAQ,KAAK8B,UAAU,KAAhD,0CAGA,cAAClB,EAAA,EAAD,CAAYZ,QAAQ,QAAQf,MAAM,gBAAgB6C,UAAU,IAA5D,+GAMF,cAAC8B,GAAA,EAAD,UACE,cAAC7E,EAAA,EAAD,CACEa,KAAK,QACLX,MAAM,UACN4E,KAAK,6DACLG,UAAW,cAAC,KAAD,IAJb,2BAaJE,EACF,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,SACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC9C,EAAA,EAAD,CAAY+C,cAAY,EAAC3D,QAAQ,KAAK8B,UAAU,KAAhD,4CAGA,cAAClB,EAAA,EAAD,CAAYZ,QAAQ,QAAQf,MAAM,gBAAgB6C,UAAU,IAA5D,wHAMF,cAAC8B,GAAA,EAAD,UACE,cAAC7E,EAAA,EAAD,CACEa,KAAK,QACLX,MAAM,UACN4E,KAAK,0EAHP,2BAaLnB,EAAA,EACEe,GAAA,EACEC,GAAA,EACE9C,EAAA,EAGAA,EAAA,EAKFgD,GAAA,EACE7E,EAAA,EAIa,KAStB,OACE,cAAC,EAAD,CACE+B,YAAalE,EAAM2E,YAAY7C,MAC/BmD,WAAYjF,EAAM2E,YAAY9C,GAFhC,SAIE,eAACiE,EAAA,EAAD,CACEC,WAAS,EACTzB,UAAU,MACV3E,eAAe,SACfJ,WAAW,SACXP,QAAS,EALX,UAOGkI,EACAC,EACAE,EACAV,EACAW,Q,UCxLHC,GAAwB,CAC5B,CACEC,MAAO,UACPC,WAAY,UACZC,KAAM,GAER,CACEF,MAAO,OACPC,WAAY,eACZC,KAAM,GAER,CACEF,MAAO,OACPC,WAAY,aACZC,KAAM,IAIJC,GAAO,CACX,CAAE9F,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,2BAE9C,CACES,GAAI,EACJ+F,QAAS,OACThC,KAAM,OACNxE,KAAM,iCAER,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,4BAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,wBAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,8BAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,6BAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,sBAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,yBAC9C,CAAES,GAAI,EAAG+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,yBAC9C,CACES,GAAI,GACJ+F,QAAS,OACThC,KAAM,OACNxE,KAAM,+BAER,CAAES,GAAI,GAAI+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,8BAE/C,CAAES,GAAI,GAAI+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,4BAC/C,CAAES,GAAI,GAAI+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,6BAC/C,CAAES,GAAI,GAAI+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,8BAC/C,CAAES,GAAI,GAAI+F,QAAS,OAAQhC,KAAM,OAAQxE,KAAM,8BA0ClCyG,GAvC+B,SAAC7H,GAC7C2C,QAAQC,IAAI,eACZ7B,qBAAU,WACR,sBAAC,sBAAA2F,EAAA,yFAAD,GAAmBrF,SAClB,IAEH,IAAIyG,EACF,eAAC9D,EAAA,EAAD,CAAY+D,MAAM,SAAS7C,UAAU,KAAK9B,QAAQ,KAAKH,MAAO,CAAE+E,OAAQ,IAAxE,iCACsB,uBADtB,mIAQF,OACE,cAAC,EAAD,CACE9D,YAAalE,EAAM2E,YAAY7C,MAC/BmD,WAAYjF,EAAM2E,YAAY9C,GAFhC,SAIE,eAACiE,EAAA,EAAD,CACEC,WAAS,EACTpG,eAAe,SACfJ,WAAW,SACX+E,UAAW,SACXtF,QAAS,EALX,UAOE,cAAC8G,EAAA,EAAD,CAAMG,MAAI,EAAV,SAAY6B,IACZ,cAAC9D,EAAA,EAAD,CAAYf,MAAO,CAAEgF,cAAe,IAAK/C,UAAU,KAAK9B,QAAQ,KAAhE,mCAGA,qBAAKH,MAAO,CAAEtF,OAAQ,IAAKG,MAAO,QAAlC,SACE,cAAC,KAAD,CAAU6J,KAAMA,GAAMJ,QAASA,GAASW,SAAU,Y,wCCsC7CC,GA/GiC,SAACnI,GAM/C2C,QAAQC,IAAI,YACZ7B,qBAAU,WACR,sBAAC,sBAAA2F,EAAA,yFAAD,GAAmBrF,SAClB,IAWH,IAAI+G,EACF,uBAAMnF,MAAO,CAACzD,QAAU,GAAxB,UAEA,cAACwE,EAAA,EAAD,CAAYZ,QAAQ,KAAK8B,UAAU,KAAnC,gCACA,eAACY,EAAA,EAAD,CAAMC,WAAS,EAAC/G,QAAS,EAAzB,UACE,cAAC8G,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAIyB,GAAI,EAAvB,SACA,cAACC,GAAA,EAAD,CACEC,aAAa,QACbnH,KAAK,YACLoH,UAAQ,EACRC,WAAS,EACT5G,GAAG,YACH6G,MAAM,aACNC,WAAS,MAGb,cAAC7C,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAIyB,GAAI,EAAvB,SACE,cAACC,GAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACT5G,GAAG,WACH6G,MAAM,YACNtH,KAAK,WACLmH,aAAa,YAGjB,cAACzC,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAf,SACE,cAAC0B,GAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACT5G,GAAG,QACH6G,MAAM,gBACNtH,KAAK,QACLmH,aAAa,YAGjB,cAACzC,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAf,SACE,cAAC0B,GAAA,EAAD,CACEzG,GAAG,oBACH6G,MAAM,UACNE,YAAY,qBACZC,WAAS,EACTlB,KAAM,EACNvE,QAAQ,WACRqF,WAAS,MAGf,cAACtG,EAAA,EAAD,CAAQ2G,KAAK,SAASL,WAAS,EAACrF,QAAQ,YAAxC,0BAOI2F,EACF,cAACC,GAAA,EAAD,CAAKlL,MAAO,EAAGL,QAAQ,OAAOkC,eAAe,SACvCsJ,EAAG,EADT,SAGI,eAACpC,GAAA,EAAD,CAAM5D,MA7EI,CACdxF,QAAS,QACTK,MAAO,QACPH,OAAQ,QA0EJ,UACE,cAACqL,GAAA,EAAD,CAAKE,EAAG,EAAR,SAAY,eAAClF,EAAA,EAAD,CAAYZ,QAAQ,KAAK8B,UAAU,KAAnC,UAAwC,cAACiE,GAAA,EAAD,IAAxC,eACZ,cAACH,GAAA,EAAD,CAAKE,EAAG,EAAR,oBACA,cAACF,GAAA,EAAD,CAAKE,EAAG,EAAR,SAAW,mBAAGjC,KAAK,sCAAR,2BACX,cAAC+B,GAAA,EAAD,CAAKE,EAAG,EAAR,uBACA,cAACF,GAAA,EAAD,CAAKE,EAAG,EAAR,SAAW,cAAC/D,GAAA,EAAD,CAAM8B,KAAK,0DAAX,kCAInB,OACE,cAAC,EAAD,CACE/C,YAAalE,EAAM2E,YAAY7C,MAC/BmD,WAAYjF,EAAM2E,YAAY9C,GAFhC,SAKJ,eAACiE,EAAA,EAAD,CACQC,WAAS,EACT/G,QAAS,EACTW,eAAe,SACfJ,WAAW,SACX+E,UAAU,MALlB,UAOQ,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAIyB,GAAI,EAAvB,SACGD,IAEH,cAACtC,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAKyB,GAAI,EAAxB,SACGU,U,+BChHL1L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTkC,eAAgB,SAChBJ,WAAY,SACZ5B,OAAQ,QACRyL,WAAY,UAEdC,UAAW,CACThH,MAAO,WAET0D,UAAW,CACTI,UAAW,UAEbrE,MAAO,CAELqB,SAAU,UAEZmG,OAAQ,CAENnG,SAAU,YAwCCoG,GArC8B,SAACvJ,GAE5C2C,QAAQC,IAAI,WACZ,IAAMzC,EAAU9C,KAChB,EAA8BgD,oBAAS,GAAvC,mBAAOmJ,EAAP,KAAgBC,EAAhB,KAQA,OAPA1I,qBAAU,WACR0I,GAAW,GACX,sBAAC,sBAAA/C,EAAA,yFAAD,GACKrF,SAEJ,IAGD,cAAC,EAAD,CACE6C,YAAalE,EAAM2E,YAAY7C,MAC/BmD,WAAYjF,EAAM2E,YAAY9C,GAFhC,SAIE,cAAC6H,GAAA,EAAD,yBACEC,GAAIH,GACCA,EAAU,CAAEI,QAAS,KAAS,IAFrC,IAGEC,gBAAiB,GAHnB,SAKE,sBAAKnG,UAAWvD,EAAQ4F,UAAxB,UACE,qBAAIrC,UAAWvD,EAAQ2B,MAAvB,wBACa,uBADb,KAEI,4CAEJ,eAAC,IAAD,CAAMsD,GAAI,SAAV,UACI,cAACrC,EAAA,EAAD,UACA,cAAC,KAAD,CAAgBW,UAAWvD,EAAQmJ,WAFvC,gB,wCNpCEhN,O,iBAAAA,I,iBAAAA,I,yBAAAA,I,qBAAAA,I,eAAAA,I,wBAAAA,M,KA4BZ,IA8EemI,GA9Ee,CAG5B,CACE5C,GAAIvF,EAAQwN,MACZzE,KAAM,IACN0E,WAAY,QACZ7E,UAAWqE,IAGf,CACE1H,GAAIvF,EAAQiN,KACZlE,KAAM,QACNvD,MAAO,OACPoD,UAAWqE,GACX1E,WAAY,CACV/C,MAAO,OACPyD,KAAMyE,OAKV,CACEnI,GAAIvF,EAAQuL,MACZxC,KAAM,SACNvD,MAAO,QACPoD,UAAW2C,GACXhD,WAAY,CACV/C,MAAO,QACPyD,KAAM0E,OAIR,CACEpI,GAAIvF,EAAQ4N,SACZ7E,KAAM,WACNvD,MAAO,WACPoD,UAAWuB,GACX5B,WAAY,CACV/C,MAAO,WACPyD,KAAM4E,OAyBV,CACEtI,GAAIvF,EAAQ6L,QACZ9C,KAAM,WACNvD,MAAO,UACPoD,UAAWiD,GACXtD,WAAY,CACV/C,MAAO,UACPyD,KAAM6E,QO9GGC,GAVY,SAACrK,GAC1B,OACE,cAAC,EAAD,CACEkE,YAAY,QACZyB,UAAW,O,UCMjB,SAAS2E,KAEP,IAFuC,EAEnCC,EAAsB,GAFa,cAIf9F,IAJe,IAIvC,2BAAgC,CAAC,IAM3B+B,EANG7B,EAAuB,QAC1B6F,GAAQ,GACc,IAAtB7F,EAAY6F,QACdA,GAAQ,GAMRhE,EADE7B,EAAYoF,WACH,cAAC,IAAD,CAAU3E,GAAIT,EAAYoF,aAE1B,cAACpF,EAAYO,UAAb,CAAuBP,YAAaA,IAGjD4F,EAAKxG,KACH,cAAC,IAAD,CAEEyG,MAAOA,EACPnF,KAAMV,EAAYU,KAHpB,SAKGmB,GAJI7B,EAAY9C,MApBgB,8BA4BvC,OAAO0I,EAoBME,IC1DHC,GD0DGD,GAjBf,WAGE,OADA9H,QAAQC,IAAI+H,oIAEV,cAAC,IAAD,UACE,cAAC,KAAD,CAAoBC,iBAAkBC,IAAtC,SACE,eAAC,IAAD,WACGP,KACD,cAAC,IAAD,UACE,cAAC,GAAD,cEvCGQ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3J,MAAK,YAAkD,IAA/C4J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCKDO,GAAwB5K,IAAM6K,cAElC,MAqDMC,GA/C8B,SAACxL,GAE5C,MAA2CsC,cAAnCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,cAqCzB,OACE,cAAC8I,GAAsBG,SAAvB,CAAgCC,MAAO,CAACC,eApCnB,SAACpK,GAEtB,IAAImB,EADJC,QAAQC,IAAI,sBAGgB,IAAxBrB,EAAQsB,cACVH,EAAS,SAACI,GAAD,OACP,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAO,CAACZ,MAAO,SACf,aAAW,UACXD,QAAS,WACPI,EAAcM,IALlB,SAQE,cAACI,EAAA,EAAD,CACEC,SAAS,cAOjBZ,EACEhB,EAAQU,QAAS,CACfmB,QAAS7B,EAAQ6B,QACjBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,iBAAkBjC,EAAQiC,kBAAoB,IAC9Cd,aAMJ,SACK1C,EAAMwG,Y,mBF5DHkE,O,iBAAAA,I,qBAAAA,I,4BAAAA,Q,KA2CL,IAAMkB,GAAgBlL,IAAM6K,cAK1B,MAaHM,GAAuB,SAACC,EAAgCpJ,GAC5D,IAAIqJ,EAAgB,aAAOD,GAE3B,OAAQpJ,EAAOoG,MACb,IAAK,MACHiD,EAAiBhI,KAAK,CACpBjB,IAAKJ,EAAOI,IACZpB,MAAM,EACNsK,SAAS,EACTzK,QAASmB,EAAOnB,UAEpB,MAEA,IAAK,QACL,IAAK,UAAL,oBAG8BwK,GAH9B,IAGE,2BAA8C,CAAC,IAAtCE,EAAqC,QAC5C,GAAIA,EAAgBnJ,MAAQJ,EAAOI,IACjC,OAAQJ,EAAOoG,MACb,IAAK,QACHmD,EAAgBvK,MAAO,EACzB,MAEA,IAAK,UACHuK,EAAgBD,QAAUtJ,EAAOsJ,UAX3C,+BAkBF,OAAOD,GAsLMG,GAnLsB,SAAClM,GACpC,MAA+CmM,qBAC7CN,GACA,IAFF,mBAAOC,EAAP,KAAsBM,EAAtB,KAcMC,EAAe,SAAC9K,GACpB,IAAIuB,EAAMvB,EAAQuB,KAAOwJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAQzC,OAPAjL,EAAQuB,IAAMA,EAEdsJ,EAAsB,CACpBtD,KAAM,MACNhG,IAAKA,EACLvB,QAASA,IAEJuB,GAmBT,OACE,eAAC8I,GAAcH,SAAf,CAAwBC,MAAO,CAC7Be,YAvCgB,SAAC3J,GAAc,IAAD,gBACPgJ,GADO,IAChC,2BAAwC,CAAC,IAAhCY,EAA+B,QAClCA,EAAa5J,MAAQA,IACvB4J,EAAahL,MAAO,IAHQ,gCAwC9B2K,eACAM,kBApBsB,SAACpL,GACzB,OAAO8K,EAAa,aAClBvD,KAAM4B,GAAWkC,OACdrL,KAkBHsL,oBAdwB,SAACtL,GAC3B,OAAO8K,EAAa,aAClBvD,KAAM4B,GAAWoC,SACdvL,MAOL,UAOIuK,GAAiBA,EAAcpH,KAAI,SAACgI,EAAc9H,GAEhD,OACE,eAACnD,EAAA,EAAD,yBAEEgH,WAAW,EACXsE,WAAY,CACV9J,MAAO,CACL+J,SAAU,UAGdtL,KAAMgL,EAAahL,KACnBC,QAAS,WACH+K,EAAanL,QAAQI,SACvB+K,EAAanL,QAAQI,WAIzBsL,SAAU,cAONP,EAAanL,QAAQ2L,aAtB3B,cAwBE,cAACtL,EAAA,EAAD,UAAc8K,EAAanL,QAAQO,QACnC,eAACC,EAAA,EAAD,WAE6C,kBAAlC2K,EAAanL,QAAQU,SAC5B,cAACD,EAAA,EAAD,UACG0K,EAAanL,QAAQU,UAKgB,iBAAjCyK,EAAanL,QAAQU,SAC1ByK,EAAanL,QAAQU,WAK3B,eAACC,EAAA,EAAD,WAEIwK,EAAanL,QAAQuH,OAAS4B,GAAWyC,YACzCT,EAAanL,QAAQ6L,QAIpBV,EAAanL,QAAQuH,OAAS4B,GAAWkC,OAC1C,cAACzK,EAAA,EAAD,CACEC,QAAS,WACPgK,EAAsB,CACpBtD,KAAM,QACNhG,IAAK4J,EAAa5J,OAGtBT,MAAM,UAPR,SAQGqK,EAAanL,QAAQ8L,iBAAmB,SAK1CX,EAAanL,QAAQuH,OAAS4B,GAAWoC,SAC1C,cAAC3K,EAAA,EAAD,CACEmL,SAAUZ,EAAaV,QACvB5J,QAAS,WACPgK,EAAsB,CACpBtD,KAAM,QACNhG,IAAK4J,EAAa5J,MAGhB4J,EAAanL,QAAQgM,iBACvBb,EAAanL,QAAQgM,mBAGzBlL,MAAM,UAZR,oBAiBCqK,EAAanL,QAAQuH,OAAS4B,GAAWoC,SAC1C,cAAC3K,EAAA,EAAD,CACEmL,SAAUZ,EAAaV,QACvB5J,QAAO,sBAAE,8BAAAsE,EAAA,yDAEH8G,GAAc,GAGdd,EAAanL,QAAQkM,UALlB,uBAMLrB,EAAsB,CACpBtD,KAAM,UACNhG,IAAK4J,EAAa5J,IAClBkJ,SAAS,IATN,SAWcU,EAAanL,QAAQkM,YAXnC,OAWDC,EAXC,OAYLtB,EAAsB,CACpBtD,KAAM,UACNhG,IAAK4J,EAAa5J,IAClBkJ,SAAS,IAGXwB,KAA2B,IAAXE,GAlBX,OAqBHF,GACFpB,EAAsB,CACpBtD,KAAM,QACNhG,IAAK4J,EAAa5J,MAxBf,2CA6BTT,MAAM,YA/BR,2BA/ECqK,EAAa5J,QAuHzB9C,EAAMwG,aGxQbmH,IAASC,OACP,cAAC,IAAD,CAAkBC,SAAU,EAA5B,SACA,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UAIJC,SAASC,eAAe,SAM1BjD,O","file":"static/js/main.c014f1c6.chunk.js","sourcesContent":["import Dashboard from \"./pages/Dashboard\";\r\n\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Home from \"./pages/Home\";\r\n\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Email as EmailIcon,\r\n  Home as HomeIcon\r\n} from '@material-ui/icons';\r\n\r\n\r\n\r\ninterface DrawerItem {\r\n  title: string,\r\n  icon?: any\r\n}\r\n\r\n\r\nexport enum RouteId {\r\n  Index,\r\n  About,\r\n  Dashboard,\r\n  Contact,\r\n  Home,\r\n  Projects\r\n}\r\n\r\nexport interface RoutedComponentProps {\r\n  routeDetail: RouteDetail\r\n}\r\n\r\ninterface RouteDetail {\r\n  id: RouteId,\r\n  path: string,\r\n  redirectTo?: string,\r\n  title?: string,\r\n  component: React.FC<RoutedComponentProps>,\r\n  exact?: boolean,    // Default: false\r\n  drawerItem?: DrawerItem\r\n}\r\n\r\n\r\nexport function findRouteDetailById(id: RouteId) {\r\n\r\n}\r\n\r\nconst routes: RouteDetail[] = [\r\n\r\n  // Index \r\n  {\r\n    id: RouteId.Index,\r\n    path: \"/\",\r\n    redirectTo: \"/home\",\r\n    component: Home \r\n  },\r\n  //home\r\n{\r\n  id: RouteId.Home,\r\n  path: \"/home\", \r\n  title: \"Home\",\r\n  component: Home,\r\n  drawerItem: {\r\n    title: \"Home\",\r\n    icon: HomeIcon\r\n  }\r\n},\r\n//About\r\n  \r\n{\r\n  id: RouteId.About,\r\n  path: \"/about\", \r\n  title: \"About\",\r\n  component: About,\r\n  drawerItem: {\r\n    title: \"About\",\r\n    icon: PersonIcon\r\n  }\r\n},\r\n  // Dashboard\r\n  {\r\n    id: RouteId.Projects,\r\n    path: \"/project\", \r\n    title: \"Projects\",\r\n    component: Dashboard,\r\n    drawerItem: {\r\n      title: \"Projects\",\r\n      icon: DashboardIcon\r\n    }\r\n  },\r\n  // {\r\n  //   id: RouteId.Test,\r\n  //   path: \"/test\", \r\n  //   title: \"test\",\r\n  //   component: Dashboard,\r\n  //   drawerItem: {\r\n  //     title: \"test\",\r\n  //     icon: TimelineIcon\r\n  //   }\r\n  // },\r\n\r\n  // {\r\n  //   id: RouteId.NotFound,\r\n  //   path: \"/404\", \r\n  //   title: \"404 not found\",\r\n  //   component: NotFound,\r\n  //   drawerItem: {\r\n  //     title: \"Not found\",\r\n  //     icon: AssessmentIcon\r\n  //   }\r\n  // }\r\n  // ,\r\n  {\r\n    id: RouteId.Contact,\r\n    path: \"/contact\", \r\n    title: \"Contact\",\r\n    component: Contact,\r\n    drawerItem: {\r\n      title: \"Contact\",\r\n      icon: EmailIcon\r\n    }\r\n  }\r\n  \r\n]\r\n\r\nexport default routes;\r\n","\r\nconst localStorageService = {\r\n  drawerOpened: {\r\n    set(flag: boolean) {\r\n      localStorage.setItem(\"drawerOpened\", JSON.stringify(flag));\r\n    },\r\n\r\n    unset() {\r\n      localStorage.removeItem(\"drawerOpened\");\r\n    },\r\n\r\n    get(): boolean {\r\n      // Default true\r\n      return !(JSON.parse(localStorage.getItem(\"drawerOpened\") as string) === false);\r\n    }\r\n  },\r\n\r\n}\r\n\r\nexport default localStorageService;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport routes, { RouteId } from '../routes';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, LinearProgress, Menu, MenuItem, Grid } from '@material-ui/core';\r\n\r\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\r\nimport { \r\n  Close as CloseIcon,\r\n} from '@material-ui/icons';\r\nimport localStorageService from '../service/localStorageService';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport interface PageTemplateProps {\r\n  appBarTitle?: string;\r\n  appBarBack?: string;\r\n  selectedId?: RouteId;\r\n  isLoading?: boolean;  // Default: false\r\n\r\n  errorCode?: number;\r\n\r\n  // Return true or void if need to render children content\r\n  init?: () => void | boolean | Promise<void | boolean>;\r\n  createAlertRef?: (createAlert: (options?: AlertDialogOptions) => void) => void;\r\n  createSnackbarRef?: (createSnackbar: (options: SnackbarOptions) => void) => void;\r\n}\r\n\r\nexport interface AlertDialogOptions {\r\n  title: string;\r\n  message: string;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport interface SnackbarOptions {\r\n  message: string;\r\n  variant?: SnackbarVariantType;\r\n  dismissable?: boolean; // default: true\r\n  autoHideDuration?: number;  // default: 5000\r\n}\r\n\r\n\r\ntype ErrorDetail ={\r\n  code: number,\r\n  message: string\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    background: \"#EAEAEA\" , height:\"100vh\"\r\n  },\r\n  linearProgress: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '0.2em',\r\n    top: 0, \r\n    left: 0,\r\n    zIndex: 2000\r\n  },\r\n  appBar: {\r\n    background: \"#23395d\",\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n\r\n  const [isInit, setIsInit] = useState(false);\r\n  // const [canUpdateUserRole, setCanUpdateUserRole] = useState(false);\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n\r\n\r\n  const updateDrawerOpened = (flag: boolean) => {\r\n    setDrawerOpened(flag);\r\n    localStorageService.drawerOpened.set(flag);\r\n  }\r\n\r\n  const [alertDialogOpened, setAlertDialogOpened] = React.useState(false);\r\n  const [alertDialogOptions, setAlertDialogOptions] = React.useState({} as AlertDialogOptions)\r\n\r\n  useEffect(() => {\r\n\r\n    const afterInit = (shouldInit: boolean | void) => {\r\n      setIsInit(!(shouldInit === false));\r\n    };\r\n        if (props.init) { \r\n\r\n          if (props.init.constructor.name === \"AsyncFunction\") {\r\n         \r\n            (props.init as () => Promise<boolean | void>)().then(afterInit);\r\n          } else {\r\n           \r\n            afterInit((props.init as () => boolean | void)());\r\n          }\r\n        } else {\r\n          setIsInit(true);\r\n        }\r\n\r\n  }, []);\r\n\r\n\r\n  if (props.createAlertRef) {\r\n    let createAlert = (options?: AlertDialogOptions) => {\r\n      if (options) {\r\n        setAlertDialogOptions(options);\r\n        setAlertDialogOpened(true);\r\n      }\r\n    }\r\n    props.createAlertRef(createAlert);\r\n  }\r\n\r\n  const alertDialog = (\r\n    <Dialog\r\n      open={alertDialogOpened}\r\n      onClose={() => {\r\n        setAlertDialogOpened(false);\r\n      }}\r\n      // onExit={() => {\r\n      //   if (alertDialogOptions.onClose) {\r\n      //     alertDialogOptions.onClose();\r\n      //   }\r\n      // }}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{alertDialogOptions.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {alertDialogOptions.message}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setAlertDialogOpened(false)} color=\"primary\">\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  if (props.createSnackbarRef) {\r\n    let createSnackbar = (options: SnackbarOptions) => {\r\n      console.log(\"Creating snackbar\");\r\n      var action; \r\n\r\n      if (options.dismissable !== false)\r\n      action = (key: any) => (\r\n        <IconButton \r\n          size=\"small\" \r\n          style={{color: 'white'}} \r\n          aria-label=\"dismiss\"\r\n          onClick={() => {\r\n            closeSnackbar(key);\r\n          }}\r\n        >\r\n          <CloseIcon \r\n            fontSize=\"small\"\r\n          />\r\n        </IconButton>\r\n        \r\n    );\r\n      enqueueSnackbar(\r\n        options.message, {\r\n          variant: options.variant,\r\n          anchorOrigin: {\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          },\r\n          autoHideDuration: options.autoHideDuration || 5000,\r\n          action\r\n        }\r\n      );\r\n    }\r\n    props.createSnackbarRef(createSnackbar);\r\n  }\r\n\r\n\r\n  const appBar = (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: drawerOpened,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={() => updateDrawerOpened(true)}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, drawerOpened && classes.hide)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        {\r\n          props.appBarBack && \r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Back\"\r\n              onClick={() => history.push(props.appBarBack as any)}\r\n              edge=\"start\"\r\n              className={classes.backButton}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n        }\r\n        \r\n        <Typography variant=\"h6\" noWrap>\r\n          {props.appBarTitle}\r\n        </Typography>       \r\n\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n\r\n\r\n  const drawer = (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={drawerOpened}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        Menu\r\n        <IconButton onClick={() => updateDrawerOpened(false)}>\r\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {routes.map((routeDetail, index) => {\r\n          let drawerItem = routeDetail.drawerItem\r\n          if (drawerItem) {\r\n            return (\r\n              <ListItem \r\n                key={index}\r\n                button={true}\r\n                selected={routeDetail.id === props.selectedId}\r\n                component={Link}\r\n                to={routeDetail.path}\r\n              >\r\n                <ListItemIcon><drawerItem.icon /></ListItemIcon>\r\n                <ListItemText primary={drawerItem.title} />\r\n              </ListItem>\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n        }\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n\r\n  var errorDetail: ErrorDetail = {} as ErrorDetail;\r\n\r\n  if (props.errorCode != null) {\r\n    errorDetail = {\r\n      code: props.errorCode,\r\n      message: \"\"\r\n    };\r\n    \r\n    switch (props.errorCode) {\r\n      case 403: \r\n        errorDetail.message = \"Forbidden\";\r\n      break;\r\n  \r\n      case 404: \r\n        errorDetail.message = \"Page Not Found\";\r\n      break;\r\n  \r\n      case 500:\r\n        errorDetail.message = \"Server Error\";\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  var errorContent = errorDetail ? (\r\n    <Grid \r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        marginTop: '5em'\r\n      }}\r\n    >\r\n      <Grid item\r\n        style={{\r\n          fontSize: '5em',\r\n          fontWeight: 'bold',\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {errorDetail.code}\r\n      </Grid>\r\n      <Grid item\r\n        style={{\r\n          fontSize: '1.5em',\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {errorDetail.message}\r\n      </Grid>\r\n    </Grid>\r\n  ) : null;\r\n\r\n  return (\r\n    (<div className={classes.root}>\r\n      <CssBaseline />\r\n      {props.isLoading && <LinearProgress color=\"secondary\" className={classes.linearProgress}/>}\r\n      {alertDialog}\r\n      {appBar}\r\n      {drawer}\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: drawerOpened,\r\n        })}\r\n        // style={{background: \"#EAEAEA\"}}\r\n        style={{background: \"#EAEAEA\" ,overflowY:\"auto\" }}\r\n      >\r\n        <div className={classes.drawerHeader}  />\r\n        {isInit ? props.errorCode == null ? props.children:null:null}\r\n        {errorContent}\r\n      </main>\r\n    </div>)\r\n  );\r\n}\r\n\r\nexport default PageTemplate;","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst Dashboard: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hi\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  var fanGameProject = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            ホロ読み（holoyomi)\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            A Hololive Fan Game Project. The project was created with the\r\n            Hololive fan community. I took part in building one of the minigames\r\n            with Unity.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://itzeusmti.itch.io/holoyomi\"\r\n          >\r\n            Play\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var MGMProject = (\r\n    <Grid item xs={6}>\r\n      <Card style={{height:\"100%\"}}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Member-Get-Member(MGM) project\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Created a MGM API with other intern in Tandem HK.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://eugeniecheng.medium.com/hackathon-in-tandem-hk-d650da98535b\"\r\n          >\r\n            Blog\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var CurrencyProject = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Exchange Currency Tool\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            The tool converts the currency by the current exchange rates. This\r\n            tool is created in React.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/ExchangeCurrencyTool\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var busTerminus = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            [Unreal Engine] Bus Terminus\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Created a similar bus terminus scene in Unreal Engine with level\r\n            editing and scripting skills.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/-UnrealEngine-Bus-Terminus\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var Rhythm = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Rhythm Game with Sound control\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            The game is created with Pygame. The feature of the game is sound\r\n            input contol and the beat generation.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/AIST2010-Introduction-to-Computer-Music\"\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var cardTemp = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Project\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Project details\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://cuhk.edu.hk\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        {MGMProject}\r\n        {CurrencyProject}\r\n        {busTerminus}\r\n        {fanGameProject}\r\n        {Rhythm}\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n} from \"@material-ui/data-grid\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"subject\",\r\n    headerName: \"Subject\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"code\",\r\n    headerName: \"Couse number\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Couse name\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, subject: \"AIST\", code: \"2010\", name: \"Intro to Computer Music\" },\r\n\r\n  {\r\n    id: 2,\r\n    subject: \"CSCI\",\r\n    code: \"1130\",\r\n    name: \"Intro to Computing Using Java\",\r\n  },\r\n  { id: 3, subject: \"CSCI\", code: \"2100\", name: \"Intro to Data Structures\" },\r\n  { id: 4, subject: \"CSCI\", code: \"3100\", name: \"Software Engineering\" },\r\n  { id: 5, subject: \"CSCI\", code: \"3150\", name: \"Intro to Operating Systems\" },\r\n  { id: 6, subject: \"CSCI\", code: \"3160\", name: \"Design & Analysis of Algo\" },\r\n  { id: 7, subject: \"CSCI\", code: \"3230\", name: \"Fundamentals of AI\" },\r\n  { id: 8, subject: \"CSCI\", code: \"3250\", name: \"Computers and Society\" },\r\n  { id: 9, subject: \"CSCI\", code: \"3251\", name: \"Engineering Practicum\" },\r\n  {\r\n    id: 10,\r\n    subject: \"CSCI\",\r\n    code: \"3260\",\r\n    name: \"Principles of Comp Graphics\",\r\n  },\r\n  { id: 11, subject: \"CSCI\", code: \"4120\", name: \"Principles of Comp Game SW\" },\r\n\r\n  { id: 12, subject: \"JASP\", code: \"1450\", name: \"New Practical Japanese I\" },\r\n  { id: 13, subject: \"JASP\", code: \"1460\", name: \"New Practical Japanese II\" },\r\n  { id: 14, subject: \"JASP\", code: \"2450\", name: \"New Practical Japanese III\" },\r\n  { id: 15, subject: \"JASP\", code: \"2460\", name: \"New Practical Japanese IV\" },\r\n];\r\n\r\nconst About: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hello world\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  var shortIntro = (\r\n    <Typography align=\"center\" component=\"h5\" variant=\"h5\" style={{ margin: 50 }} >\r\n      I am Eugenie Cheng. <br />A final year university student who is pursuing a\r\n      Bachelor of Computer Science at The Chinese University of Hong Kong\r\n      (CUHK).\r\n      \r\n    </Typography>\r\n  );\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction={\"column\"}\r\n        spacing={2}\r\n      >\r\n        <Grid item>{shortIntro}</Grid>\r\n        <Typography style={{ paddingBottom: 30 }}component=\"h5\" variant=\"h5\">\r\n          Course taken in CUHK:\r\n        </Typography>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n        </div>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Email as EmailIcon,\r\n} from '@material-ui/icons';\r\n\r\n// import backendApi from \"../../backendApi\";\r\nconst Contact: React.FC<RoutedComponentProps> = (props) => {\r\n  var cardStyle = {\r\n    display: 'block',\r\n    width: '100vw',\r\n    height: 'auto'\r\n}\r\n  console.log(\"find me?\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n  // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n  //   event.preventDefault();\r\n  //   const data = new FormData(event.currentTarget);\r\n  //   // eslint-disable-next-line no-console\r\n  //   console.log({\r\n  //     email: data.get(\"email\"),\r\n  //     message: data.get(\"message\"),\r\n  //   });\r\n  // };\r\n\r\n  var contactform=(\r\n    <form style={{padding : 2 }}>\r\n      \r\n    <Typography variant=\"h5\" component=\"h5\">Leave Your Message</Typography>\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n      <TextField\r\n        autoComplete=\"fname\"\r\n        name=\"firstName\"\r\n        required\r\n        fullWidth\r\n        id=\"firstName\"\r\n        label=\"First Name\"\r\n        autoFocus\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        id=\"lastName\"\r\n        label=\"Last Name\"\r\n        name=\"lastName\"\r\n        autoComplete=\"lname\"\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        id=\"email\"\r\n        label=\"Email Address\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Message\"\r\n        placeholder=\"Enter Your Message\"\r\n        multiline\r\n        rows={4}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n      />\r\n    </Grid>\r\n  <Button type=\"submit\" fullWidth variant=\"contained\">\r\n    Submit\r\n  </Button>\r\n  </Grid>\r\n  </form>\r\n  );\r\n\r\n  var contactcard=(\r\n    <Box width={1} display=\"flex\" justifyContent=\"center\" \r\n          m={2}\r\n          >\r\n        <Card style={cardStyle}>\r\n          <Box p={1} ><Typography variant=\"h5\" component=\"h5\"><EmailIcon/>Contact</Typography></Box>\r\n          <Box p={1} >Email:</Box>\r\n          <Box p={1}><a href=\"mailto: eugenie.630.cheng@gmail.com\"> Click here</a></Box>\r\n          <Box p={1}>Linkedin:</Box>\r\n          <Box p={1}><Link href=\"https://www.linkedin.com/in/eugenie-cheng-eugenieeeech/\">Eugenie Cheng</Link></Box>\r\n        </Card>\r\n        </Box>\r\n  );\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n\r\n<Grid\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"row\"\r\n      >\r\n        <Grid item xs={12} sm={6}>\r\n          {contactform}\r\n        </Grid>\r\n        <Grid item xs={12}  sm={6}>\r\n          {contactcard}\r\n        </Grid>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport routes, { RoutedComponentProps } from \"../../routes\";\r\nimport { Collapse, Grid, IconButton } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { Link } from 'react-router-dom';\r\n// import backendApi from \"../../backendApi\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Nunito',\r\n  },\r\n  colorText: {\r\n    color: '#5AFF3D',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    //color: '#fff',\r\n    fontSize: '4.5rem',\r\n  },\r\n  goDown: {\r\n    //color: '#5AFF3D',\r\n    fontSize: '4rem',\r\n  },\r\n}));\r\nconst Home: React.FC<RoutedComponentProps> = (props) => {\r\n  \r\n  console.log(\"welcome\")\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n    (async () => {\r\n    })().then();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n        collapsedHeight={50}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to <br />\r\n            My<span>Page.</span>\r\n          </h1>\r\n          <Link to={'/about'}>\r\n              <IconButton>\r\n              <ExpandMoreIcon className={classes.goDown}></ExpandMoreIcon>\r\n            </IconButton> </Link>\r\n        </div>\r\n      </Collapse>\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\n\r\nconst NotFound: React.FC = (props) => {\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle=\"Error\"\r\n      errorCode={404}\r\n    >    \r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport NotFound from './pages/NotFound';\r\nimport { QueryParamProvider } from 'use-query-params';\r\n\r\nfunction RouterSwitches(): JSX.Element[] {\r\n\r\n  let doms: JSX.Element[] = [];\r\n\r\n  for (let routeDetail of routes) {\r\n    let exact = true;  // Default true\r\n    if (routeDetail.exact === false) {\r\n      exact = false;\r\n    }\r\n\r\n    var children;\r\n\r\n    if (routeDetail.redirectTo) {\r\n      children = <Redirect to={routeDetail.redirectTo} />;\r\n    } else {\r\n      children = <routeDetail.component routeDetail={routeDetail} />\r\n       \r\n    }\r\n    doms.push(\r\n      <Route \r\n        key={routeDetail.id}\r\n        exact={exact} \r\n        path={routeDetail.path} \r\n      >\r\n        {children}\r\n      </Route>\r\n    )\r\n  }\r\n  return doms;\r\n}\r\n\r\nfunction App() {\r\n\r\n  console.log(process.env);\r\n  return (\r\n    <Router>\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        <Switch>\r\n          {RouterSwitches()}\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </QueryParamProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {  useReducer } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, DialogProps } from \"@material-ui/core\";\r\n\r\nexport enum DialogType {\r\n  Alert, \r\n  Confirm,\r\n  Customized,\r\n}\r\n\r\nexport interface DialogOptions {\r\n  title: string | JSX.Element;\r\n  message: string | JSX.Element;\r\n  type?: DialogType;    // Default alert\r\n  key?: number;\r\n\r\n  DialogProps?: Partial<DialogProps>;\r\n\r\n  onClose?: () => void; // For all\r\n\r\n  alertActionText?: string; // Default \"OK\"\r\n\r\n  actions?: JSX.Element;\r\n\r\n  // action?: React.ReactNode | React.ReactNode[];     // Override default action\r\n  onConfirm?: () => boolean | void | Promise<boolean | void>;   // For confirm\r\n  onConfirmCancel?: () => boolean | void | Promise<boolean | void>; // For confirm\r\n}\r\n\r\ninterface DialogDetails {\r\n  key?: number;\r\n  open: boolean;\r\n  loading: boolean;\r\n  options: DialogOptions;\r\n\r\n\r\n\r\n}\r\n\r\n// https://www.basefactor.com/global-state-with-react\r\n// https://dev.to/oieduardorabelo/react-hooks-how-to-create-and-update-contextprovider-1f68\r\n// https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\r\n//const defaultGlobalState: AlertDialogDetails[] = [];\r\n\r\n\r\ntype CreateDialogFunction = (options: DialogOptions) => number;\r\n\r\nexport const DialogContext = React.createContext<{\r\n  closeDialog: (key: any) => void,\r\n  createDialog: CreateDialogFunction,\r\n  createAlertDialog: CreateDialogFunction,\r\n  createConfirmDialog: CreateDialogFunction,\r\n}| null>(null);\r\n\r\nexport const useDialog = () => {\r\n  return React.useContext(DialogContext);\r\n}\r\n\r\ninterface DialogDetailsReducerAction {\r\n  type: 'add' | 'close' | 'loading';\r\n  options?: DialogOptions;  // add\r\n  key?: number; // close\r\n  loading?: boolean;  // loading\r\n};\r\n\r\nconst dialogDetailsReducer = (dialogDetails: DialogDetails[], action: DialogDetailsReducerAction) => {\r\n  var newDialogDetails = [...dialogDetails];\r\n\r\n  switch (action.type) {\r\n    case 'add':\r\n      newDialogDetails.push({\r\n        key: action.key,\r\n        open: true,\r\n        loading: false,\r\n        options: action.options as DialogOptions\r\n      })\r\n    break;\r\n\r\n    case 'close':\r\n    case 'loading': \r\n\r\n      // Find dialog details by key\r\n      for (let newDialogDetail of newDialogDetails) {\r\n        if (newDialogDetail.key === action.key) {\r\n          switch (action.type) {\r\n            case 'close': \r\n              newDialogDetail.open = false;\r\n            break;\r\n\r\n            case 'loading':\r\n              newDialogDetail.loading = action.loading as boolean;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    break;\r\n  }\r\n  return newDialogDetails;\r\n}\r\n\r\nconst DialogProvider: React.FC<{}> = (props) => {\r\n  const [dialogDetails, dispatchDialogDetails] = useReducer(\r\n    dialogDetailsReducer,\r\n    [] as DialogDetails[]  // initial state\r\n  );\r\n\r\n  const closeDialog = (key: any) => {\r\n    for (let dialogDetail of dialogDetails) {\r\n      if (dialogDetail.key === key) {\r\n        dialogDetail.open = false;\r\n      }\r\n    }\r\n    //setDialogDetails([...dialogDetails]);\r\n  }\r\n\r\n  const createDialog = (options: DialogOptions) => {\r\n    var key = options.key || Math.floor(Math.random() * 10000000);\r\n    options.key = key;\r\n\r\n    dispatchDialogDetails({\r\n      type: 'add',\r\n      key: key,\r\n      options: options\r\n    })\r\n    return key; \r\n  }\r\n\r\n  const createAlertDialog = (options: DialogOptions) => {\r\n    return createDialog({\r\n      type: DialogType.Alert,\r\n      ...options\r\n    });\r\n  }\r\n\r\n  const createConfirmDialog = (options: DialogOptions) => {\r\n    return createDialog({\r\n      type: DialogType.Confirm,\r\n      ...options\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <DialogContext.Provider value={{\r\n      closeDialog,\r\n      createDialog, \r\n      createAlertDialog,\r\n      createConfirmDialog,\r\n    }}>\r\n      {\r\n        dialogDetails && dialogDetails.map((dialogDetail, index) => {\r\n          //console.log(dialogDetail.key);\r\n          return (\r\n            <Dialog\r\n              key={dialogDetail.key}\r\n              fullWidth={true}\r\n              PaperProps={{\r\n                style: {\r\n                  minWidth: '320px'\r\n                }\r\n              }}\r\n              open={dialogDetail.open}\r\n              onClose={() => {\r\n                if (dialogDetail.options.onClose) {\r\n                  dialogDetail.options.onClose();\r\n                }\r\n                \r\n              }}\r\n              onExited={() => {\r\n                // Delete this alert dialog from detail\r\n                // dialogDetails.filter((obj) => {\r\n                //   return obj != dialogDetail;\r\n                // });\r\n                // setDialogDetails([...dialogDetails]);\r\n              }}\r\n              {...dialogDetail.options.DialogProps}\r\n            >\r\n              <DialogTitle>{dialogDetail.options.title}</DialogTitle>\r\n              <DialogContent>\r\n                {\r\n                  typeof(dialogDetail.options.message) === \"string\" && (\r\n                  <DialogContentText>\r\n                    {dialogDetail.options.message}\r\n                  </DialogContentText>\r\n                  )\r\n                }\r\n                {\r\n                  typeof(dialogDetail.options.message) != \"string\" && (\r\n                    dialogDetail.options.message\r\n                  )\r\n                }\r\n\r\n              </DialogContent>\r\n              <DialogActions>\r\n                {\r\n                  dialogDetail.options.type === DialogType.Customized &&\r\n                  dialogDetail.options.actions\r\n                }\r\n\r\n                {\r\n                  (dialogDetail.options.type === DialogType.Alert) &&\r\n                  <Button \r\n                    onClick={() => {\r\n                      dispatchDialogDetails({\r\n                        type: 'close',\r\n                        key: dialogDetail.key\r\n                      })\r\n                    }}\r\n                    color=\"primary\">\r\n                    {dialogDetail.options.alertActionText || \"Okay\"}\r\n                  </Button>\r\n                }\r\n                \r\n                {\r\n                  (dialogDetail.options.type === DialogType.Confirm) &&\r\n                  <Button \r\n                    disabled={dialogDetail.loading}\r\n                    onClick={() => {\r\n                      dispatchDialogDetails({\r\n                        type: 'close',\r\n                        key: dialogDetail.key\r\n                      })\r\n                      \r\n                      if (dialogDetail.options.onConfirmCancel) {\r\n                        dialogDetail.options.onConfirmCancel();\r\n                      }\r\n                    }}\r\n                    color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                }\r\n                {\r\n                  (dialogDetail.options.type === DialogType.Confirm) &&\r\n                  <Button \r\n                    disabled={dialogDetail.loading}\r\n                    onClick={async () => {\r\n                      \r\n                      var shouldClose = true;\r\n                      \r\n\r\n                      if (dialogDetail.options.onConfirm) {\r\n                        dispatchDialogDetails({\r\n                          type: 'loading',\r\n                          key: dialogDetail.key,\r\n                          loading: true\r\n                        })\r\n                        let result = await dialogDetail.options.onConfirm();\r\n                        dispatchDialogDetails({\r\n                          type: 'loading',\r\n                          key: dialogDetail.key,\r\n                          loading: false\r\n                        });\r\n\r\n                        shouldClose = !(result === false);\r\n                      }\r\n\r\n                      if (shouldClose) {\r\n                        dispatchDialogDetails({\r\n                          type: 'close',\r\n                          key: dialogDetail.key\r\n                        })\r\n                      }\r\n                      \r\n                    }}\r\n                    color=\"secondary\">\r\n                    Confirm\r\n                  </Button>\r\n                }\r\n              </DialogActions>\r\n            </Dialog>\r\n          )\r\n        })\r\n      }\r\n      {props.children}\r\n    </DialogContext.Provider>\r\n  )\r\n}\r\n\r\nexport default DialogProvider;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\n\r\n\r\nexport interface CreateSnackbarOptions {\r\n  message: string;\r\n  variant?: SnackbarVariantType;\r\n  dismissable?: boolean; // default: true\r\n  autoHideDuration?: number;  // default: 5000\r\n}\r\n\r\nexport const CreateSnackbarContext = React.createContext<{\r\n  createSnackbar: (options: CreateSnackbarOptions) => void\r\n}| null>(null);\r\n\r\nexport const useCreateSnackbar = () => {\r\n  return React.useContext(CreateSnackbarContext);\r\n}\r\n\r\nconst CreateSnackbarProvider: React.FC<{}> = (props) => {\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const createSnackbar = (options: CreateSnackbarOptions) => {\r\n    console.log(\"Creating snackbar\");\r\n    var action; \r\n\r\n    if (options.dismissable !== false) {\r\n      action = (key : any) => (\r\n        <IconButton \r\n          size=\"small\" \r\n          style={{color: 'white'}} \r\n          aria-label=\"dismiss\"\r\n          onClick={() => {\r\n            closeSnackbar(key);\r\n          }}\r\n        >\r\n          <CloseIcon \r\n            fontSize=\"small\"\r\n          />\r\n        </IconButton>\r\n        \r\n      );\r\n    }\r\n\r\n    enqueueSnackbar(\r\n      options.message, {\r\n        variant: options.variant,\r\n        anchorOrigin: {\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        },\r\n        autoHideDuration: options.autoHideDuration || 5000,\r\n        action\r\n      }\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CreateSnackbarContext.Provider value={{createSnackbar}}>\r\n        {props.children}\r\n    </CreateSnackbarContext.Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default CreateSnackbarProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport CreateSnackbarProvider from './components/CreateSnackbarProvider';\r\nimport DialogProvider from './components/DialogProvider';\r\n\r\nReactDOM.render(\r\n  <SnackbarProvider maxSnack={5}>\r\n  <CreateSnackbarProvider>\r\n    <DialogProvider>\r\n      <App />\r\n    </DialogProvider>\r\n  </CreateSnackbarProvider>\r\n</SnackbarProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}