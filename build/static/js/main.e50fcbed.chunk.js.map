{"version":3,"sources":["routes.tsx","service/localStorageService.tsx","components/PageTemplate.tsx","pages/Dashboard/index.tsx","pages/About/index.tsx","pages/Contact/index.tsx","pages/Home/index.tsx","pages/NotFound/index.tsx","App.tsx","components/DialogProvider.tsx","reportWebVitals.ts","components/CreateSnackbarProvider.tsx","index.tsx"],"names":["RouteId","localStorageService","drawerOpened","set","flag","localStorage","setItem","JSON","stringify","unset","removeItem","get","parse","getItem","drawerWidth","useStyles","makeStyles","theme","root","display","background","height","linearProgress","position","width","top","left","zIndex","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","backButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PageTemplate","props","history","useHistory","classes","useTheme","useState","isInit","setIsInit","setDrawerOpened","userMenuAnchorEl","setUserMenuAnchorEl","updateDrawerOpened","React","alertDialogOpened","setAlertDialogOpened","alertDialogOptions","setAlertDialogOptions","useEffect","afterInit","shouldInit","init","constructor","name","then","createAlertRef","options","alertDialog","Dialog","open","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","useSnackbar","enqueueSnackbar","closeSnackbar","createSnackbarRef","action","console","log","dismissable","key","IconButton","size","style","Close","fontSize","variant","anchorOrigin","vertical","horizontal","autoHideDuration","AppBar","className","clsx","Toolbar","edge","appBarBack","push","Typography","noWrap","appBarTitle","textTransform","e","currentTarget","AccountCircle","ArrowDropDown","anchorEl","getContentAnchorEl","transformOrigin","keepMounted","Boolean","MenuItem","component","Link","to","Drawer","anchor","paper","direction","Divider","List","routes","map","routeDetail","index","drawerItem","ListItem","button","selected","selectedId","path","ListItemIcon","icon","ListItemText","primary","errorDetail","errorCode","code","errorContent","Grid","container","marginTop","item","fontWeight","textAlign","CssBaseline","isLoading","LinearProgress","overflowY","children","Dashboard","a","fanGameProject","xs","Card","CardContent","gutterBottom","CardActions","href","MGMProject","CurrencyProject","startIcon","busTerminus","Rhythm","columns","field","headerName","flex","rows","subject","About","shortIntro","align","margin","paddingBottom","pageSize","Contact","Box","m","p","Email","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","placeholder","multiline","type","fontFamily","colorText","goDown","Home","checked","setChecked","Collapse","in","timeout","collapsedHeight","Index","redirectTo","HomeIcon","PersonIcon","Projects","DashboardIcon","EmailIcon","NotFound","RouterSwitches","doms","exact","App","DialogType","process","ReactRouterRoute","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CreateSnackbarContext","createContext","CreateSnackbarProvider","Provider","value","createSnackbar","DialogContext","dialogDetailsReducer","dialogDetails","newDialogDetails","loading","newDialogDetail","DialogProvider","useReducer","dispatchDialogDetails","createDialog","Math","floor","random","closeDialog","dialogDetail","createAlertDialog","Alert","createConfirmDialog","Confirm","PaperProps","minWidth","onExited","DialogProps","Customized","actions","alertActionText","disabled","onConfirmCancel","shouldClose","onConfirm","result","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.e50fcbed.chunk.js","sourcesContent":["import Dashboard from \"./pages/Dashboard\";\r\n\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Home from \"./pages/Home\";\r\n\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  Timeline as TimelineIcon,\r\n  Assessment as AssessmentIcon,\r\n  Person as PersonIcon,\r\n  Email as EmailIcon,\r\n  Home as HomeIcon\r\n} from '@material-ui/icons';\r\n\r\n\r\n\r\ninterface DrawerItem {\r\n  title: string,\r\n  icon?: any\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport enum RouteId {\r\n  Index,\r\n  About,\r\n  Dashboard,\r\n  Contact,\r\n  Home,\r\n  Projects\r\n}\r\n\r\nexport interface RoutedComponentProps {\r\n  routeDetail: RouteDetail\r\n}\r\n\r\ninterface RouteDetail {\r\n  id: RouteId,\r\n  path: string,\r\n  redirectTo?: string,\r\n  title?: string,\r\n  component: React.FC<RoutedComponentProps>,\r\n  exact?: boolean,    // Default: false\r\n  drawerItem?: DrawerItem\r\n}\r\n\r\n\r\nexport function findRouteDetailById(id: RouteId) {\r\n\r\n}\r\n\r\nconst routes: RouteDetail[] = [\r\n\r\n  // Index \r\n  {\r\n    id: RouteId.Index,\r\n    path: \"/Personal-page\",\r\n    redirectTo: \"/Personal-page/home\",\r\n    component: Home \r\n  },\r\n  //home\r\n{\r\n  id: RouteId.Home,\r\n  path: \"/Personal-page/home\", \r\n  title: \"Home\",\r\n  component: Home,\r\n  drawerItem: {\r\n    title: \"Home\",\r\n    icon: HomeIcon\r\n  }\r\n},\r\n//About\r\n  \r\n{\r\n  id: RouteId.About,\r\n  path: \"/Personal-page/about\", \r\n  title: \"About\",\r\n  component: About,\r\n  drawerItem: {\r\n    title: \"About\",\r\n    icon: PersonIcon\r\n  }\r\n},\r\n  // Dashboard\r\n  {\r\n    id: RouteId.Projects,\r\n    path: \"/Personal-page/project\", \r\n    title: \"Projects\",\r\n    component: Dashboard,\r\n    drawerItem: {\r\n      title: \"Projects\",\r\n      icon: DashboardIcon\r\n    }\r\n  },\r\n  // {\r\n  //   id: RouteId.Test,\r\n  //   path: \"/test\", \r\n  //   title: \"test\",\r\n  //   component: Dashboard,\r\n  //   drawerItem: {\r\n  //     title: \"test\",\r\n  //     icon: TimelineIcon\r\n  //   }\r\n  // },\r\n\r\n  // {\r\n  //   id: RouteId.NotFound,\r\n  //   path: \"/404\", \r\n  //   title: \"404 not found\",\r\n  //   component: NotFound,\r\n  //   drawerItem: {\r\n  //     title: \"Not found\",\r\n  //     icon: AssessmentIcon\r\n  //   }\r\n  // }\r\n  // ,\r\n  {\r\n    id: RouteId.Contact,\r\n    path: \"/contact\", \r\n    title: \"Contact\",\r\n    component: Contact,\r\n    drawerItem: {\r\n      title: \"Contact\",\r\n      icon: EmailIcon\r\n    }\r\n  }\r\n  \r\n]\r\n\r\nexport default routes;","\nconst localStorageService = {\n  drawerOpened: {\n    set(flag: boolean) {\n      localStorage.setItem(\"drawerOpened\", JSON.stringify(flag));\n    },\n\n    unset() {\n      localStorage.removeItem(\"drawerOpened\");\n    },\n\n    get(): boolean {\n      // Default true\n      return !(JSON.parse(localStorage.getItem(\"drawerOpened\") as string) === false);\n    }\n  },\n\n}\n\nexport default localStorageService;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport routes, { RouteId } from '../routes';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, LinearProgress, Menu, MenuItem, Grid } from '@material-ui/core';\n\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\nimport { \n  Close as CloseIcon,\n  AccountCircle as AccountCircleIcon,\n  ArrowDropDown as ArrowDropDownIcon,\n} from '@material-ui/icons';\nimport localStorageService from '../service/localStorageService';\n\nconst drawerWidth = 240;\n\nexport interface PageTemplateProps {\n  appBarTitle?: string;\n  appBarBack?: string;\n  selectedId?: RouteId;\n  isLoading?: boolean;  // Default: false\n\n  errorCode?: number;\n\n  // Return true or void if need to render children content\n  init?: () => void | boolean | Promise<void | boolean>;\n  createAlertRef?: (createAlert: (options?: AlertDialogOptions) => void) => void;\n  createSnackbarRef?: (createSnackbar: (options: SnackbarOptions) => void) => void;\n}\n\nexport interface AlertDialogOptions {\n  title: string;\n  message: string;\n  onClose?: () => void;\n}\n\nexport interface SnackbarOptions {\n  message: string;\n  variant?: SnackbarVariantType;\n  dismissable?: boolean; // default: true\n  autoHideDuration?: number;  // default: 5000\n}\n\n\ntype ErrorDetail ={\n  code: number,\n  message: string\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    background: \"#EAEAEA\" , height:\"100vh\"\n  },\n  linearProgress: {\n    position: 'fixed',\n    width: '100%',\n    height: '0.2em',\n    top: 0, \n    left: 0,\n    zIndex: 2000\n  },\n  appBar: {\n    background: \"#23395d\",\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst PageTemplate: React.FC<PageTemplateProps> = (props) => {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n  const [isInit, setIsInit] = useState(false);\n  // const [canUpdateUserRole, setCanUpdateUserRole] = useState(false);\n  const [drawerOpened, setDrawerOpened] = useState(localStorageService.drawerOpened.get());\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState(null);\n\n  const updateDrawerOpened = (flag: boolean) => {\n    setDrawerOpened(flag);\n    localStorageService.drawerOpened.set(flag);\n  }\n\n  const [alertDialogOpened, setAlertDialogOpened] = React.useState(false);\n  const [alertDialogOptions, setAlertDialogOptions] = React.useState({} as AlertDialogOptions)\n\n  useEffect(() => {\n\n    const afterInit = (shouldInit: boolean | void) => {\n      setIsInit(!(shouldInit === false));\n    };\n        if (props.init) { \n\n          if (props.init.constructor.name === \"AsyncFunction\") {\n         \n            (props.init as () => Promise<boolean | void>)().then(afterInit);\n          } else {\n           \n            afterInit((props.init as () => boolean | void)());\n          }\n        } else {\n          setIsInit(true);\n        }\n\n  }, []);\n\n\n  if (props.createAlertRef) {\n    let createAlert = (options?: AlertDialogOptions) => {\n      if (options) {\n        setAlertDialogOptions(options);\n        setAlertDialogOpened(true);\n      }\n    }\n    props.createAlertRef(createAlert);\n  }\n\n  const alertDialog = (\n    <Dialog\n      open={alertDialogOpened}\n      onClose={() => {\n        setAlertDialogOpened(false);\n      }}\n      // onExit={() => {\n      //   if (alertDialogOptions.onClose) {\n      //     alertDialogOptions.onClose();\n      //   }\n      // }}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{alertDialogOptions.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {alertDialogOptions.message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setAlertDialogOpened(false)} color=\"primary\">\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  if (props.createSnackbarRef) {\n    let createSnackbar = (options: SnackbarOptions) => {\n      console.log(\"Creating snackbar\");\n      var action; \n\n      if (options.dismissable !== false)\n      action = (key: any) => (\n        <IconButton \n          size=\"small\" \n          style={{color: 'white'}} \n          aria-label=\"dismiss\"\n          onClick={() => {\n            closeSnackbar(key);\n          }}\n        >\n          <CloseIcon \n            fontSize=\"small\"\n          />\n        </IconButton>\n        \n    );\n      enqueueSnackbar(\n        options.message, {\n          variant: options.variant,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right',\n          },\n          autoHideDuration: options.autoHideDuration || 5000,\n          action\n        }\n      );\n    }\n    props.createSnackbarRef(createSnackbar);\n  }\n\n\n  const appBar = (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpened,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={() => updateDrawerOpened(true)}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawerOpened && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        {\n          props.appBarBack && \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Back\"\n              onClick={() => history.push(props.appBarBack as any)}\n              edge=\"start\"\n              className={classes.backButton}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n        }\n        \n        <Typography variant=\"h6\" noWrap>\n          {props.appBarTitle}\n        </Typography>\n\n        <Button\n          color=\"inherit\"\n          style={{marginLeft: \"auto\", textTransform: \"none\"}}\n          size=\"large\"\n          onClick={(e: any) => {\n            setUserMenuAnchorEl(e.currentTarget);\n          }}\n        >\n          <AccountCircleIcon style={{marginRight: \"0.5em\"}} />\n          <ArrowDropDownIcon style={{marginLeft: \"0.1em\"}} />\n        </Button>\n\n        <Menu\n          anchorEl={userMenuAnchorEl}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          keepMounted\n          open={Boolean(userMenuAnchorEl)}\n          onClose={() => {\n            setUserMenuAnchorEl(null);\n          }}\n        >\n          <MenuItem\n            component={Link}\n            to=\"/settings\"\n          >\n            Settings\n          </MenuItem>\n          \n          <MenuItem\n            component={Link}\n            to=\"/user/logout\"\n          >\n            Logout\n          </MenuItem>\n        </Menu>\n\n      </Toolbar>\n    </AppBar>\n  );\n\n\n  const drawer = (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={drawerOpened}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        Menu\n        <IconButton onClick={() => updateDrawerOpened(false)}>\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {routes.map((routeDetail, index) => {\n          let drawerItem = routeDetail.drawerItem\n          if (drawerItem) {\n            return (\n              <ListItem \n                key={index}\n                button={true}\n                selected={routeDetail.id === props.selectedId}\n                component={Link}\n                to={routeDetail.path}\n              >\n                <ListItemIcon><drawerItem.icon /></ListItemIcon>\n                <ListItemText primary={drawerItem.title} />\n              </ListItem>\n            );\n          }\n          return null;\n        })\n        }\n      </List>\n    </Drawer>\n  );\n\n\n  var errorDetail: ErrorDetail = {} as ErrorDetail;\n\n  if (props.errorCode != null) {\n    errorDetail = {\n      code: props.errorCode,\n      message: \"\"\n    };\n    \n    switch (props.errorCode) {\n      case 403: \n        errorDetail.message = \"Forbidden\";\n      break;\n  \n      case 404: \n        errorDetail.message = \"Page Not Found\";\n      break;\n  \n      case 500:\n        errorDetail.message = \"Server Error\";\n      break;\n    }\n  }\n\n\n  var errorContent = errorDetail ? (\n    <Grid \n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      style={{\n        marginTop: '5em'\n      }}\n    >\n      <Grid item\n        style={{\n          fontSize: '5em',\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }}\n      >\n        {errorDetail.code}\n      </Grid>\n      <Grid item\n        style={{\n          fontSize: '1.5em',\n          textAlign: 'center'\n        }}\n      >\n        {errorDetail.message}\n      </Grid>\n    </Grid>\n  ) : null;\n\n  return (\n    (<div className={classes.root}>\n      <CssBaseline />\n      {props.isLoading && <LinearProgress color=\"secondary\" className={classes.linearProgress}/>}\n      {alertDialog}\n      {appBar}\n      {drawer}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: drawerOpened,\n        })}\n        // style={{background: \"#EAEAEA\"}}\n        style={{background: \"#EAEAEA\" ,overflowY:\"auto\" }}\n      >\n        <div className={classes.drawerHeader}  />\n        {isInit ? props.errorCode == null ? props.children:null:null}\n        {errorContent}\n      </main>\n    </div>)\n  );\n}\n\nexport default PageTemplate;","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst Dashboard: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hi\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  var fanGameProject = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            ホロ読み（holoyomi)\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            A Hololive Fan Game Project. The project was created with the\r\n            Hololive fan community. I took part in building one of the minigames\r\n            with Unity.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://itzeusmti.itch.io/holoyomi\"\r\n          >\r\n            Play\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var MGMProject = (\r\n    <Grid item xs={6}>\r\n      <Card style={{height:\"100%\"}}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Member-Get-Member(MGM) project\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Created a MGM API with other intern in Tandem HK.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://eugeniecheng.medium.com/hackathon-in-tandem-hk-d650da98535b\"\r\n          >\r\n            Blog\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var CurrencyProject = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Exchange Currency Tool\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            The tool converts the currency by the current exchange rates. This\r\n            tool is created in React.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/ExchangeCurrencyTool\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var busTerminus = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            [Unreal Engine] Bus Terminus\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Created a similar bus terminus scene in Unreal Engine with level\r\n            editing and scripting skills.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/-UnrealEngine-Bus-Terminus\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var Rhythm = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Rhythm Game with Sound control\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            The game is created with Pygame. The feature of the game is sound\r\n            input contol and the beat generation.\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://github.com/eugenieeeech/AIST2010-Introduction-to-Computer-Music\"\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  var cardTemp = (\r\n    <Grid item xs={6}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Project\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Project details\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            href=\"https://cuhk.edu.hk\"\r\n            startIcon={<GitHubIcon />}\r\n          >\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        {MGMProject}\r\n        {CurrencyProject}\r\n        {busTerminus}\r\n        {fanGameProject}\r\n        {Rhythm}\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n} from \"@material-ui/data-grid\";\r\n// import backendApi from \"../../backendApi\";\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"subject\",\r\n    headerName: \"Subject\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"code\",\r\n    headerName: \"Couse number\",\r\n    flex: 1,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Couse name\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, subject: \"AIST\", code: \"2010\", name: \"Intro to Computer Music\" },\r\n\r\n  {\r\n    id: 2,\r\n    subject: \"CSCI\",\r\n    code: \"1130\",\r\n    name: \"Intro to Computing Using Java\",\r\n  },\r\n  { id: 3, subject: \"CSCI\", code: \"2100\", name: \"Intro to Data Structures\" },\r\n  { id: 4, subject: \"CSCI\", code: \"3100\", name: \"Software Engineering\" },\r\n  { id: 5, subject: \"CSCI\", code: \"3150\", name: \"Intro to Operating Systems\" },\r\n  { id: 6, subject: \"CSCI\", code: \"3160\", name: \"Design & Analysis of Algo\" },\r\n  { id: 7, subject: \"CSCI\", code: \"3230\", name: \"Fundamentals of AI\" },\r\n  { id: 8, subject: \"CSCI\", code: \"3250\", name: \"Computers and Society\" },\r\n  { id: 9, subject: \"CSCI\", code: \"3251\", name: \"Engineering Practicum\" },\r\n  {\r\n    id: 10,\r\n    subject: \"CSCI\",\r\n    code: \"3260\",\r\n    name: \"Principles of Comp Graphics\",\r\n  },\r\n  { id: 11, subject: \"CSCI\", code: \"4120\", name: \"Principles of Comp Game SW\" },\r\n\r\n  { id: 12, subject: \"JASP\", code: \"1450\", name: \"New Practical Japanese I\" },\r\n  { id: 13, subject: \"JASP\", code: \"1460\", name: \"New Practical Japanese II\" },\r\n  { id: 14, subject: \"JASP\", code: \"2450\", name: \"New Practical Japanese III\" },\r\n  { id: 15, subject: \"JASP\", code: \"2460\", name: \"New Practical Japanese IV\" },\r\n];\r\n\r\nconst About: React.FC<RoutedComponentProps> = (props) => {\r\n  console.log(\"hello world\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n\r\n  var shortIntro = (\r\n    <Typography align=\"center\" component=\"h5\" variant=\"h5\" style={{ margin: 50 }} >\r\n      I am Eugenie Cheng. <br />A final year university student who is pursuing a\r\n      Bachelor of Computer Science at The Chinese University of Hong Kong\r\n      (CUHK).\r\n      \r\n    </Typography>\r\n  );\r\n\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction={\"column\"}\r\n        spacing={2}\r\n      >\r\n        <Grid item>{shortIntro}</Grid>\r\n        <Typography style={{ paddingBottom: 30 }}component=\"h5\" variant=\"h5\">\r\n          Course taken in CUHK:\r\n        </Typography>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n        </div>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport { RoutedComponentProps } from \"../../routes\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Email as EmailIcon,\r\n} from '@material-ui/icons';\r\n\r\n// import backendApi from \"../../backendApi\";\r\nconst Contact: React.FC<RoutedComponentProps> = (props) => {\r\n  var cardStyle = {\r\n    display: 'block',\r\n    width: '100vw',\r\n    height: 'auto'\r\n}\r\n  console.log(\"find me?\");\r\n  useEffect(() => {\r\n    (async () => {})().then();\r\n  }, []);\r\n  // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n  //   event.preventDefault();\r\n  //   const data = new FormData(event.currentTarget);\r\n  //   // eslint-disable-next-line no-console\r\n  //   console.log({\r\n  //     email: data.get(\"email\"),\r\n  //     message: data.get(\"message\"),\r\n  //   });\r\n  // };\r\n  return (\r\n    <PageTemplate\r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Grid container justifyContent=\"center\"\r\n          alignItems=\"center\" item spacing={2}\r\n          direction=\"row\">\r\n        <Grid item container>\r\n          <Box width={1} display=\"flex\" justifyContent=\"center\" \r\n          m={2}\r\n          >\r\n        <Card style={cardStyle}>\r\n          <Box p={1} ><Typography variant=\"h5\" component=\"h5\"><EmailIcon/>Contact</Typography></Box>\r\n          <Box p={1} >Email:</Box>\r\n          <Box p={1}><a href=\"mailto: eugenie.630.cheng@gmail.com\"> Click here</a></Box>\r\n          <Box p={1}>Linkedin:</Box>\r\n          <Box p={1}><Link href=\"https://www.linkedin.com/in/eugenie-cheng-eugenieeeech/\">Eugenie Cheng</Link></Box>\r\n        </Card>\r\n        </Box>\r\n\r\n          <Grid><Typography variant=\"h5\" component=\"h5\">Leave Your Message</Typography></Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Message\"\r\n                placeholder=\"Enter Your Message\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\"></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\nimport routes, { RoutedComponentProps } from \"../../routes\";\r\nimport { Collapse, Grid, IconButton } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { Link } from 'react-router-dom';\r\n// import backendApi from \"../../backendApi\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Nunito',\r\n  },\r\n  colorText: {\r\n    color: '#5AFF3D',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    //color: '#fff',\r\n    fontSize: '4.5rem',\r\n  },\r\n  goDown: {\r\n    //color: '#5AFF3D',\r\n    fontSize: '4rem',\r\n  },\r\n}));\r\nconst Home: React.FC<RoutedComponentProps> = (props) => {\r\n  \r\n  console.log(\"welcome\")\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n    (async () => {\r\n    })().then();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle={props.routeDetail.title}\r\n      selectedId={props.routeDetail.id}\r\n    >\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n        collapsedHeight={50}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to <br />\r\n            My<span>Page.</span>\r\n          </h1>\r\n          <Link to={'/about'}>\r\n              <IconButton>\r\n              <ExpandMoreIcon className={classes.goDown}></ExpandMoreIcon>\r\n            </IconButton> </Link>\r\n        </div>\r\n      </Collapse>\r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport PageTemplate from \"../../components/PageTemplate\";\r\n\r\nconst NotFound: React.FC = (props) => {\r\n  return (\r\n    <PageTemplate \r\n      appBarTitle=\"Error\"\r\n      errorCode={404}\r\n    >    \r\n    </PageTemplate>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport NotFound from './pages/NotFound';\nimport { QueryParamProvider } from 'use-query-params';\n\nfunction RouterSwitches(): JSX.Element[] {\n\n  let doms: JSX.Element[] = [];\n\n  for (let routeDetail of routes) {\n    let exact = true;  // Default true\n    if (routeDetail.exact === false) {\n      exact = false;\n    }\n\n    var children;\n\n    if (routeDetail.redirectTo) {\n      children = <Redirect to={routeDetail.redirectTo} />;\n    } else {\n      children = <routeDetail.component routeDetail={routeDetail} />\n       \n    }\n    doms.push(\n      <Route \n        key={routeDetail.id}\n        exact={exact} \n        path={routeDetail.path} \n      >\n        {children}\n      </Route>\n    )\n  }\n  return doms;\n}\n\nfunction App() {\n\n  console.log(process.env);\n  return (\n    <Router>\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <Switch>\n          {RouterSwitches()}\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </QueryParamProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, {  useReducer } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, DialogProps } from \"@material-ui/core\";\n\nexport enum DialogType {\n  Alert, \n  Confirm,\n  Customized,\n}\n\nexport interface DialogOptions {\n  title: string | JSX.Element;\n  message: string | JSX.Element;\n  type?: DialogType;    // Default alert\n  key?: number;\n\n  DialogProps?: Partial<DialogProps>;\n\n  onClose?: () => void; // For all\n\n  alertActionText?: string; // Default \"OK\"\n\n  actions?: JSX.Element;\n\n  // action?: React.ReactNode | React.ReactNode[];     // Override default action\n  onConfirm?: () => boolean | void | Promise<boolean | void>;   // For confirm\n  onConfirmCancel?: () => boolean | void | Promise<boolean | void>; // For confirm\n}\n\ninterface DialogDetails {\n  key?: number;\n  open: boolean;\n  loading: boolean;\n  options: DialogOptions;\n\n\n\n}\n\n// https://www.basefactor.com/global-state-with-react\n// https://dev.to/oieduardorabelo/react-hooks-how-to-create-and-update-contextprovider-1f68\n// https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\n//const defaultGlobalState: AlertDialogDetails[] = [];\n\n\ntype CreateDialogFunction = (options: DialogOptions) => number;\n\nexport const DialogContext = React.createContext<{\n  closeDialog: (key: any) => void,\n  createDialog: CreateDialogFunction,\n  createAlertDialog: CreateDialogFunction,\n  createConfirmDialog: CreateDialogFunction,\n}| null>(null);\n\nexport const useDialog = () => {\n  return React.useContext(DialogContext);\n}\n\ninterface DialogDetailsReducerAction {\n  type: 'add' | 'close' | 'loading';\n  options?: DialogOptions;  // add\n  key?: number; // close\n  loading?: boolean;  // loading\n};\n\nconst dialogDetailsReducer = (dialogDetails: DialogDetails[], action: DialogDetailsReducerAction) => {\n  var newDialogDetails = [...dialogDetails];\n\n  switch (action.type) {\n    case 'add':\n      newDialogDetails.push({\n        key: action.key,\n        open: true,\n        loading: false,\n        options: action.options as DialogOptions\n      })\n    break;\n\n    case 'close':\n    case 'loading': \n\n      // Find dialog details by key\n      for (let newDialogDetail of newDialogDetails) {\n        if (newDialogDetail.key === action.key) {\n          switch (action.type) {\n            case 'close': \n              newDialogDetail.open = false;\n            break;\n\n            case 'loading':\n              newDialogDetail.loading = action.loading as boolean;\n            break;\n          }\n        }\n      }\n    break;\n  }\n  return newDialogDetails;\n}\n\nconst DialogProvider: React.FC<{}> = (props) => {\n  const [dialogDetails, dispatchDialogDetails] = useReducer(\n    dialogDetailsReducer,\n    [] as DialogDetails[]  // initial state\n  );\n\n  const closeDialog = (key: any) => {\n    for (let dialogDetail of dialogDetails) {\n      if (dialogDetail.key === key) {\n        dialogDetail.open = false;\n      }\n    }\n    //setDialogDetails([...dialogDetails]);\n  }\n\n  const createDialog = (options: DialogOptions) => {\n    var key = options.key || Math.floor(Math.random() * 10000000);\n    options.key = key;\n\n    dispatchDialogDetails({\n      type: 'add',\n      key: key,\n      options: options\n    })\n    return key; \n  }\n\n  const createAlertDialog = (options: DialogOptions) => {\n    return createDialog({\n      type: DialogType.Alert,\n      ...options\n    });\n  }\n\n  const createConfirmDialog = (options: DialogOptions) => {\n    return createDialog({\n      type: DialogType.Confirm,\n      ...options\n    });\n  }\n\n\n\n  return (\n    <DialogContext.Provider value={{\n      closeDialog,\n      createDialog, \n      createAlertDialog,\n      createConfirmDialog,\n    }}>\n      {\n        dialogDetails && dialogDetails.map((dialogDetail, index) => {\n          //console.log(dialogDetail.key);\n          return (\n            <Dialog\n              key={dialogDetail.key}\n              fullWidth={true}\n              PaperProps={{\n                style: {\n                  minWidth: '320px'\n                }\n              }}\n              open={dialogDetail.open}\n              onClose={() => {\n                if (dialogDetail.options.onClose) {\n                  dialogDetail.options.onClose();\n                }\n                \n              }}\n              onExited={() => {\n                // Delete this alert dialog from detail\n                // dialogDetails.filter((obj) => {\n                //   return obj != dialogDetail;\n                // });\n                // setDialogDetails([...dialogDetails]);\n              }}\n              {...dialogDetail.options.DialogProps}\n            >\n              <DialogTitle>{dialogDetail.options.title}</DialogTitle>\n              <DialogContent>\n                {\n                  typeof(dialogDetail.options.message) === \"string\" && (\n                  <DialogContentText>\n                    {dialogDetail.options.message}\n                  </DialogContentText>\n                  )\n                }\n                {\n                  typeof(dialogDetail.options.message) != \"string\" && (\n                    dialogDetail.options.message\n                  )\n                }\n\n              </DialogContent>\n              <DialogActions>\n                {\n                  dialogDetail.options.type === DialogType.Customized &&\n                  dialogDetail.options.actions\n                }\n\n                {\n                  (dialogDetail.options.type === DialogType.Alert) &&\n                  <Button \n                    onClick={() => {\n                      dispatchDialogDetails({\n                        type: 'close',\n                        key: dialogDetail.key\n                      })\n                    }}\n                    color=\"primary\">\n                    {dialogDetail.options.alertActionText || \"Okay\"}\n                  </Button>\n                }\n                \n                {\n                  (dialogDetail.options.type === DialogType.Confirm) &&\n                  <Button \n                    disabled={dialogDetail.loading}\n                    onClick={() => {\n                      dispatchDialogDetails({\n                        type: 'close',\n                        key: dialogDetail.key\n                      })\n                      \n                      if (dialogDetail.options.onConfirmCancel) {\n                        dialogDetail.options.onConfirmCancel();\n                      }\n                    }}\n                    color=\"primary\">\n                    Cancel\n                  </Button>\n                }\n                {\n                  (dialogDetail.options.type === DialogType.Confirm) &&\n                  <Button \n                    disabled={dialogDetail.loading}\n                    onClick={async () => {\n                      \n                      var shouldClose = true;\n                      \n\n                      if (dialogDetail.options.onConfirm) {\n                        dispatchDialogDetails({\n                          type: 'loading',\n                          key: dialogDetail.key,\n                          loading: true\n                        })\n                        let result = await dialogDetail.options.onConfirm();\n                        dispatchDialogDetails({\n                          type: 'loading',\n                          key: dialogDetail.key,\n                          loading: false\n                        });\n\n                        shouldClose = !(result === false);\n                      }\n\n                      if (shouldClose) {\n                        dispatchDialogDetails({\n                          type: 'close',\n                          key: dialogDetail.key\n                        })\n                      }\n                      \n                    }}\n                    color=\"secondary\">\n                    Confirm\n                  </Button>\n                }\n              </DialogActions>\n            </Dialog>\n          )\n        })\n      }\n      {props.children}\n    </DialogContext.Provider>\n  )\n}\n\nexport default DialogProvider;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { useSnackbar, VariantType as SnackbarVariantType } from 'notistack';\n\nimport { IconButton } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\n\n\nexport interface CreateSnackbarOptions {\n  message: string;\n  variant?: SnackbarVariantType;\n  dismissable?: boolean; // default: true\n  autoHideDuration?: number;  // default: 5000\n}\n\nexport const CreateSnackbarContext = React.createContext<{\n  createSnackbar: (options: CreateSnackbarOptions) => void\n}| null>(null);\n\nexport const useCreateSnackbar = () => {\n  return React.useContext(CreateSnackbarContext);\n}\n\nconst CreateSnackbarProvider: React.FC<{}> = (props) => {\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createSnackbar = (options: CreateSnackbarOptions) => {\n    console.log(\"Creating snackbar\");\n    var action; \n\n    if (options.dismissable !== false) {\n      action = (key : any) => (\n        <IconButton \n          size=\"small\" \n          style={{color: 'white'}} \n          aria-label=\"dismiss\"\n          onClick={() => {\n            closeSnackbar(key);\n          }}\n        >\n          <CloseIcon \n            fontSize=\"small\"\n          />\n        </IconButton>\n        \n      );\n    }\n\n    enqueueSnackbar(\n      options.message, {\n        variant: options.variant,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n        autoHideDuration: options.autoHideDuration || 5000,\n        action\n      }\n    );\n  }\n  \n  return (\n    <CreateSnackbarContext.Provider value={{createSnackbar}}>\n        {props.children}\n    </CreateSnackbarContext.Provider>\n    \n  );\n}\n\nexport default CreateSnackbarProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport CreateSnackbarProvider from './components/CreateSnackbarProvider';\nimport DialogProvider from './components/DialogProvider';\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={5}>\n  <CreateSnackbarProvider>\n    <DialogProvider>\n      <App />\n    </DialogProvider>\n  </CreateSnackbarProvider>\n</SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}